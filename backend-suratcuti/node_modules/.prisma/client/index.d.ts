
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model JenisCuti
 * 
 */
export type JenisCuti = $Result.DefaultSelection<Prisma.$JenisCutiPayload>
/**
 * Model KuotaCuti
 * 
 */
export type KuotaCuti = $Result.DefaultSelection<Prisma.$KuotaCutiPayload>
/**
 * Model CutiRequest
 * 
 */
export type CutiRequest = $Result.DefaultSelection<Prisma.$CutiRequestPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const Role: {
  pegawai: 'pegawai',
  admin: 'admin'
};

export type Role = (typeof Role)[keyof typeof Role]


export const StatusCuti: {
  DIAJUKAN: 'DIAJUKAN',
  DISETUJUI: 'DISETUJUI',
  DITOLAK: 'DITOLAK'
};

export type StatusCuti = (typeof StatusCuti)[keyof typeof StatusCuti]

}

export type Role = $Enums.Role

export const Role: typeof $Enums.Role

export type StatusCuti = $Enums.StatusCuti

export const StatusCuti: typeof $Enums.StatusCuti

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.jenisCuti`: Exposes CRUD operations for the **JenisCuti** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JenisCutis
    * const jenisCutis = await prisma.jenisCuti.findMany()
    * ```
    */
  get jenisCuti(): Prisma.JenisCutiDelegate<ExtArgs>;

  /**
   * `prisma.kuotaCuti`: Exposes CRUD operations for the **KuotaCuti** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more KuotaCutis
    * const kuotaCutis = await prisma.kuotaCuti.findMany()
    * ```
    */
  get kuotaCuti(): Prisma.KuotaCutiDelegate<ExtArgs>;

  /**
   * `prisma.cutiRequest`: Exposes CRUD operations for the **CutiRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CutiRequests
    * const cutiRequests = await prisma.cutiRequest.findMany()
    * ```
    */
  get cutiRequest(): Prisma.CutiRequestDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    JenisCuti: 'JenisCuti',
    KuotaCuti: 'KuotaCuti',
    CutiRequest: 'CutiRequest'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "jenisCuti" | "kuotaCuti" | "cutiRequest"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      JenisCuti: {
        payload: Prisma.$JenisCutiPayload<ExtArgs>
        fields: Prisma.JenisCutiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JenisCutiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisCutiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JenisCutiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisCutiPayload>
          }
          findFirst: {
            args: Prisma.JenisCutiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisCutiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JenisCutiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisCutiPayload>
          }
          findMany: {
            args: Prisma.JenisCutiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisCutiPayload>[]
          }
          create: {
            args: Prisma.JenisCutiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisCutiPayload>
          }
          createMany: {
            args: Prisma.JenisCutiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JenisCutiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisCutiPayload>[]
          }
          delete: {
            args: Prisma.JenisCutiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisCutiPayload>
          }
          update: {
            args: Prisma.JenisCutiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisCutiPayload>
          }
          deleteMany: {
            args: Prisma.JenisCutiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JenisCutiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.JenisCutiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JenisCutiPayload>
          }
          aggregate: {
            args: Prisma.JenisCutiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJenisCuti>
          }
          groupBy: {
            args: Prisma.JenisCutiGroupByArgs<ExtArgs>
            result: $Utils.Optional<JenisCutiGroupByOutputType>[]
          }
          count: {
            args: Prisma.JenisCutiCountArgs<ExtArgs>
            result: $Utils.Optional<JenisCutiCountAggregateOutputType> | number
          }
        }
      }
      KuotaCuti: {
        payload: Prisma.$KuotaCutiPayload<ExtArgs>
        fields: Prisma.KuotaCutiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.KuotaCutiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KuotaCutiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.KuotaCutiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KuotaCutiPayload>
          }
          findFirst: {
            args: Prisma.KuotaCutiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KuotaCutiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.KuotaCutiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KuotaCutiPayload>
          }
          findMany: {
            args: Prisma.KuotaCutiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KuotaCutiPayload>[]
          }
          create: {
            args: Prisma.KuotaCutiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KuotaCutiPayload>
          }
          createMany: {
            args: Prisma.KuotaCutiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.KuotaCutiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KuotaCutiPayload>[]
          }
          delete: {
            args: Prisma.KuotaCutiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KuotaCutiPayload>
          }
          update: {
            args: Prisma.KuotaCutiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KuotaCutiPayload>
          }
          deleteMany: {
            args: Prisma.KuotaCutiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.KuotaCutiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.KuotaCutiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$KuotaCutiPayload>
          }
          aggregate: {
            args: Prisma.KuotaCutiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateKuotaCuti>
          }
          groupBy: {
            args: Prisma.KuotaCutiGroupByArgs<ExtArgs>
            result: $Utils.Optional<KuotaCutiGroupByOutputType>[]
          }
          count: {
            args: Prisma.KuotaCutiCountArgs<ExtArgs>
            result: $Utils.Optional<KuotaCutiCountAggregateOutputType> | number
          }
        }
      }
      CutiRequest: {
        payload: Prisma.$CutiRequestPayload<ExtArgs>
        fields: Prisma.CutiRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CutiRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CutiRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CutiRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CutiRequestPayload>
          }
          findFirst: {
            args: Prisma.CutiRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CutiRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CutiRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CutiRequestPayload>
          }
          findMany: {
            args: Prisma.CutiRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CutiRequestPayload>[]
          }
          create: {
            args: Prisma.CutiRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CutiRequestPayload>
          }
          createMany: {
            args: Prisma.CutiRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CutiRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CutiRequestPayload>[]
          }
          delete: {
            args: Prisma.CutiRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CutiRequestPayload>
          }
          update: {
            args: Prisma.CutiRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CutiRequestPayload>
          }
          deleteMany: {
            args: Prisma.CutiRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CutiRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CutiRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CutiRequestPayload>
          }
          aggregate: {
            args: Prisma.CutiRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCutiRequest>
          }
          groupBy: {
            args: Prisma.CutiRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<CutiRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.CutiRequestCountArgs<ExtArgs>
            result: $Utils.Optional<CutiRequestCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    kuotaCuti: number
    cutiRequest: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kuotaCuti?: boolean | UserCountOutputTypeCountKuotaCutiArgs
    cutiRequest?: boolean | UserCountOutputTypeCountCutiRequestArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountKuotaCutiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KuotaCutiWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountCutiRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CutiRequestWhereInput
  }


  /**
   * Count Type JenisCutiCountOutputType
   */

  export type JenisCutiCountOutputType = {
    kuotaCuti: number
    cutiRequest: number
  }

  export type JenisCutiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kuotaCuti?: boolean | JenisCutiCountOutputTypeCountKuotaCutiArgs
    cutiRequest?: boolean | JenisCutiCountOutputTypeCountCutiRequestArgs
  }

  // Custom InputTypes
  /**
   * JenisCutiCountOutputType without action
   */
  export type JenisCutiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCutiCountOutputType
     */
    select?: JenisCutiCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * JenisCutiCountOutputType without action
   */
  export type JenisCutiCountOutputTypeCountKuotaCutiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KuotaCutiWhereInput
  }

  /**
   * JenisCutiCountOutputType without action
   */
  export type JenisCutiCountOutputTypeCountCutiRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CutiRequestWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    nama: string | null
    nip: string | null
    jabatan: string | null
    role: $Enums.Role | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    email: string | null
    password: string | null
    nama: string | null
    nip: string | null
    jabatan: string | null
    role: $Enums.Role | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    nama: number
    nip: number
    jabatan: number
    role: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    nama?: true
    nip?: true
    jabatan?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    nama?: true
    nip?: true
    jabatan?: true
    role?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    nama?: true
    nip?: true
    jabatan?: true
    role?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    email: string
    password: string
    nama: string
    nip: string | null
    jabatan: string | null
    role: $Enums.Role
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    nama?: boolean
    nip?: boolean
    jabatan?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    kuotaCuti?: boolean | User$kuotaCutiArgs<ExtArgs>
    cutiRequest?: boolean | User$cutiRequestArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    nama?: boolean
    nip?: boolean
    jabatan?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    nama?: boolean
    nip?: boolean
    jabatan?: boolean
    role?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kuotaCuti?: boolean | User$kuotaCutiArgs<ExtArgs>
    cutiRequest?: boolean | User$cutiRequestArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      kuotaCuti: Prisma.$KuotaCutiPayload<ExtArgs>[]
      cutiRequest: Prisma.$CutiRequestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      email: string
      password: string
      nama: string
      nip: string | null
      jabatan: string | null
      role: $Enums.Role
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kuotaCuti<T extends User$kuotaCutiArgs<ExtArgs> = {}>(args?: Subset<T, User$kuotaCutiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "findMany"> | Null>
    cutiRequest<T extends User$cutiRequestArgs<ExtArgs> = {}>(args?: Subset<T, User$cutiRequestArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly nama: FieldRef<"User", 'String'>
    readonly nip: FieldRef<"User", 'String'>
    readonly jabatan: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'Role'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.kuotaCuti
   */
  export type User$kuotaCutiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
    where?: KuotaCutiWhereInput
    orderBy?: KuotaCutiOrderByWithRelationInput | KuotaCutiOrderByWithRelationInput[]
    cursor?: KuotaCutiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KuotaCutiScalarFieldEnum | KuotaCutiScalarFieldEnum[]
  }

  /**
   * User.cutiRequest
   */
  export type User$cutiRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
    where?: CutiRequestWhereInput
    orderBy?: CutiRequestOrderByWithRelationInput | CutiRequestOrderByWithRelationInput[]
    cursor?: CutiRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CutiRequestScalarFieldEnum | CutiRequestScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model JenisCuti
   */

  export type AggregateJenisCuti = {
    _count: JenisCutiCountAggregateOutputType | null
    _avg: JenisCutiAvgAggregateOutputType | null
    _sum: JenisCutiSumAggregateOutputType | null
    _min: JenisCutiMinAggregateOutputType | null
    _max: JenisCutiMaxAggregateOutputType | null
  }

  export type JenisCutiAvgAggregateOutputType = {
    id: number | null
    maxHari: number | null
  }

  export type JenisCutiSumAggregateOutputType = {
    id: number | null
    maxHari: number | null
  }

  export type JenisCutiMinAggregateOutputType = {
    id: number | null
    nama: string | null
    deskripsi: string | null
    maxHari: number | null
  }

  export type JenisCutiMaxAggregateOutputType = {
    id: number | null
    nama: string | null
    deskripsi: string | null
    maxHari: number | null
  }

  export type JenisCutiCountAggregateOutputType = {
    id: number
    nama: number
    deskripsi: number
    maxHari: number
    _all: number
  }


  export type JenisCutiAvgAggregateInputType = {
    id?: true
    maxHari?: true
  }

  export type JenisCutiSumAggregateInputType = {
    id?: true
    maxHari?: true
  }

  export type JenisCutiMinAggregateInputType = {
    id?: true
    nama?: true
    deskripsi?: true
    maxHari?: true
  }

  export type JenisCutiMaxAggregateInputType = {
    id?: true
    nama?: true
    deskripsi?: true
    maxHari?: true
  }

  export type JenisCutiCountAggregateInputType = {
    id?: true
    nama?: true
    deskripsi?: true
    maxHari?: true
    _all?: true
  }

  export type JenisCutiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JenisCuti to aggregate.
     */
    where?: JenisCutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JenisCutis to fetch.
     */
    orderBy?: JenisCutiOrderByWithRelationInput | JenisCutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JenisCutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JenisCutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JenisCutis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JenisCutis
    **/
    _count?: true | JenisCutiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: JenisCutiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: JenisCutiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JenisCutiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JenisCutiMaxAggregateInputType
  }

  export type GetJenisCutiAggregateType<T extends JenisCutiAggregateArgs> = {
        [P in keyof T & keyof AggregateJenisCuti]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJenisCuti[P]>
      : GetScalarType<T[P], AggregateJenisCuti[P]>
  }




  export type JenisCutiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JenisCutiWhereInput
    orderBy?: JenisCutiOrderByWithAggregationInput | JenisCutiOrderByWithAggregationInput[]
    by: JenisCutiScalarFieldEnum[] | JenisCutiScalarFieldEnum
    having?: JenisCutiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JenisCutiCountAggregateInputType | true
    _avg?: JenisCutiAvgAggregateInputType
    _sum?: JenisCutiSumAggregateInputType
    _min?: JenisCutiMinAggregateInputType
    _max?: JenisCutiMaxAggregateInputType
  }

  export type JenisCutiGroupByOutputType = {
    id: number
    nama: string
    deskripsi: string | null
    maxHari: number
    _count: JenisCutiCountAggregateOutputType | null
    _avg: JenisCutiAvgAggregateOutputType | null
    _sum: JenisCutiSumAggregateOutputType | null
    _min: JenisCutiMinAggregateOutputType | null
    _max: JenisCutiMaxAggregateOutputType | null
  }

  type GetJenisCutiGroupByPayload<T extends JenisCutiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JenisCutiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JenisCutiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JenisCutiGroupByOutputType[P]>
            : GetScalarType<T[P], JenisCutiGroupByOutputType[P]>
        }
      >
    >


  export type JenisCutiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    deskripsi?: boolean
    maxHari?: boolean
    kuotaCuti?: boolean | JenisCuti$kuotaCutiArgs<ExtArgs>
    cutiRequest?: boolean | JenisCuti$cutiRequestArgs<ExtArgs>
    _count?: boolean | JenisCutiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jenisCuti"]>

  export type JenisCutiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nama?: boolean
    deskripsi?: boolean
    maxHari?: boolean
  }, ExtArgs["result"]["jenisCuti"]>

  export type JenisCutiSelectScalar = {
    id?: boolean
    nama?: boolean
    deskripsi?: boolean
    maxHari?: boolean
  }

  export type JenisCutiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    kuotaCuti?: boolean | JenisCuti$kuotaCutiArgs<ExtArgs>
    cutiRequest?: boolean | JenisCuti$cutiRequestArgs<ExtArgs>
    _count?: boolean | JenisCutiCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type JenisCutiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $JenisCutiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JenisCuti"
    objects: {
      kuotaCuti: Prisma.$KuotaCutiPayload<ExtArgs>[]
      cutiRequest: Prisma.$CutiRequestPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nama: string
      deskripsi: string | null
      maxHari: number
    }, ExtArgs["result"]["jenisCuti"]>
    composites: {}
  }

  type JenisCutiGetPayload<S extends boolean | null | undefined | JenisCutiDefaultArgs> = $Result.GetResult<Prisma.$JenisCutiPayload, S>

  type JenisCutiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<JenisCutiFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: JenisCutiCountAggregateInputType | true
    }

  export interface JenisCutiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JenisCuti'], meta: { name: 'JenisCuti' } }
    /**
     * Find zero or one JenisCuti that matches the filter.
     * @param {JenisCutiFindUniqueArgs} args - Arguments to find a JenisCuti
     * @example
     * // Get one JenisCuti
     * const jenisCuti = await prisma.jenisCuti.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JenisCutiFindUniqueArgs>(args: SelectSubset<T, JenisCutiFindUniqueArgs<ExtArgs>>): Prisma__JenisCutiClient<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one JenisCuti that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {JenisCutiFindUniqueOrThrowArgs} args - Arguments to find a JenisCuti
     * @example
     * // Get one JenisCuti
     * const jenisCuti = await prisma.jenisCuti.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JenisCutiFindUniqueOrThrowArgs>(args: SelectSubset<T, JenisCutiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JenisCutiClient<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first JenisCuti that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisCutiFindFirstArgs} args - Arguments to find a JenisCuti
     * @example
     * // Get one JenisCuti
     * const jenisCuti = await prisma.jenisCuti.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JenisCutiFindFirstArgs>(args?: SelectSubset<T, JenisCutiFindFirstArgs<ExtArgs>>): Prisma__JenisCutiClient<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first JenisCuti that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisCutiFindFirstOrThrowArgs} args - Arguments to find a JenisCuti
     * @example
     * // Get one JenisCuti
     * const jenisCuti = await prisma.jenisCuti.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JenisCutiFindFirstOrThrowArgs>(args?: SelectSubset<T, JenisCutiFindFirstOrThrowArgs<ExtArgs>>): Prisma__JenisCutiClient<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more JenisCutis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisCutiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JenisCutis
     * const jenisCutis = await prisma.jenisCuti.findMany()
     * 
     * // Get first 10 JenisCutis
     * const jenisCutis = await prisma.jenisCuti.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jenisCutiWithIdOnly = await prisma.jenisCuti.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JenisCutiFindManyArgs>(args?: SelectSubset<T, JenisCutiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a JenisCuti.
     * @param {JenisCutiCreateArgs} args - Arguments to create a JenisCuti.
     * @example
     * // Create one JenisCuti
     * const JenisCuti = await prisma.jenisCuti.create({
     *   data: {
     *     // ... data to create a JenisCuti
     *   }
     * })
     * 
     */
    create<T extends JenisCutiCreateArgs>(args: SelectSubset<T, JenisCutiCreateArgs<ExtArgs>>): Prisma__JenisCutiClient<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many JenisCutis.
     * @param {JenisCutiCreateManyArgs} args - Arguments to create many JenisCutis.
     * @example
     * // Create many JenisCutis
     * const jenisCuti = await prisma.jenisCuti.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JenisCutiCreateManyArgs>(args?: SelectSubset<T, JenisCutiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JenisCutis and returns the data saved in the database.
     * @param {JenisCutiCreateManyAndReturnArgs} args - Arguments to create many JenisCutis.
     * @example
     * // Create many JenisCutis
     * const jenisCuti = await prisma.jenisCuti.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JenisCutis and only return the `id`
     * const jenisCutiWithIdOnly = await prisma.jenisCuti.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JenisCutiCreateManyAndReturnArgs>(args?: SelectSubset<T, JenisCutiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a JenisCuti.
     * @param {JenisCutiDeleteArgs} args - Arguments to delete one JenisCuti.
     * @example
     * // Delete one JenisCuti
     * const JenisCuti = await prisma.jenisCuti.delete({
     *   where: {
     *     // ... filter to delete one JenisCuti
     *   }
     * })
     * 
     */
    delete<T extends JenisCutiDeleteArgs>(args: SelectSubset<T, JenisCutiDeleteArgs<ExtArgs>>): Prisma__JenisCutiClient<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one JenisCuti.
     * @param {JenisCutiUpdateArgs} args - Arguments to update one JenisCuti.
     * @example
     * // Update one JenisCuti
     * const jenisCuti = await prisma.jenisCuti.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JenisCutiUpdateArgs>(args: SelectSubset<T, JenisCutiUpdateArgs<ExtArgs>>): Prisma__JenisCutiClient<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more JenisCutis.
     * @param {JenisCutiDeleteManyArgs} args - Arguments to filter JenisCutis to delete.
     * @example
     * // Delete a few JenisCutis
     * const { count } = await prisma.jenisCuti.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JenisCutiDeleteManyArgs>(args?: SelectSubset<T, JenisCutiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JenisCutis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisCutiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JenisCutis
     * const jenisCuti = await prisma.jenisCuti.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JenisCutiUpdateManyArgs>(args: SelectSubset<T, JenisCutiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one JenisCuti.
     * @param {JenisCutiUpsertArgs} args - Arguments to update or create a JenisCuti.
     * @example
     * // Update or create a JenisCuti
     * const jenisCuti = await prisma.jenisCuti.upsert({
     *   create: {
     *     // ... data to create a JenisCuti
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JenisCuti we want to update
     *   }
     * })
     */
    upsert<T extends JenisCutiUpsertArgs>(args: SelectSubset<T, JenisCutiUpsertArgs<ExtArgs>>): Prisma__JenisCutiClient<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of JenisCutis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisCutiCountArgs} args - Arguments to filter JenisCutis to count.
     * @example
     * // Count the number of JenisCutis
     * const count = await prisma.jenisCuti.count({
     *   where: {
     *     // ... the filter for the JenisCutis we want to count
     *   }
     * })
    **/
    count<T extends JenisCutiCountArgs>(
      args?: Subset<T, JenisCutiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JenisCutiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JenisCuti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisCutiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JenisCutiAggregateArgs>(args: Subset<T, JenisCutiAggregateArgs>): Prisma.PrismaPromise<GetJenisCutiAggregateType<T>>

    /**
     * Group by JenisCuti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JenisCutiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JenisCutiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JenisCutiGroupByArgs['orderBy'] }
        : { orderBy?: JenisCutiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JenisCutiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJenisCutiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JenisCuti model
   */
  readonly fields: JenisCutiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JenisCuti.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JenisCutiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    kuotaCuti<T extends JenisCuti$kuotaCutiArgs<ExtArgs> = {}>(args?: Subset<T, JenisCuti$kuotaCutiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "findMany"> | Null>
    cutiRequest<T extends JenisCuti$cutiRequestArgs<ExtArgs> = {}>(args?: Subset<T, JenisCuti$cutiRequestArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JenisCuti model
   */ 
  interface JenisCutiFieldRefs {
    readonly id: FieldRef<"JenisCuti", 'Int'>
    readonly nama: FieldRef<"JenisCuti", 'String'>
    readonly deskripsi: FieldRef<"JenisCuti", 'String'>
    readonly maxHari: FieldRef<"JenisCuti", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * JenisCuti findUnique
   */
  export type JenisCutiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCuti
     */
    select?: JenisCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisCutiInclude<ExtArgs> | null
    /**
     * Filter, which JenisCuti to fetch.
     */
    where: JenisCutiWhereUniqueInput
  }

  /**
   * JenisCuti findUniqueOrThrow
   */
  export type JenisCutiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCuti
     */
    select?: JenisCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisCutiInclude<ExtArgs> | null
    /**
     * Filter, which JenisCuti to fetch.
     */
    where: JenisCutiWhereUniqueInput
  }

  /**
   * JenisCuti findFirst
   */
  export type JenisCutiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCuti
     */
    select?: JenisCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisCutiInclude<ExtArgs> | null
    /**
     * Filter, which JenisCuti to fetch.
     */
    where?: JenisCutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JenisCutis to fetch.
     */
    orderBy?: JenisCutiOrderByWithRelationInput | JenisCutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JenisCutis.
     */
    cursor?: JenisCutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JenisCutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JenisCutis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JenisCutis.
     */
    distinct?: JenisCutiScalarFieldEnum | JenisCutiScalarFieldEnum[]
  }

  /**
   * JenisCuti findFirstOrThrow
   */
  export type JenisCutiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCuti
     */
    select?: JenisCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisCutiInclude<ExtArgs> | null
    /**
     * Filter, which JenisCuti to fetch.
     */
    where?: JenisCutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JenisCutis to fetch.
     */
    orderBy?: JenisCutiOrderByWithRelationInput | JenisCutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JenisCutis.
     */
    cursor?: JenisCutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JenisCutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JenisCutis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JenisCutis.
     */
    distinct?: JenisCutiScalarFieldEnum | JenisCutiScalarFieldEnum[]
  }

  /**
   * JenisCuti findMany
   */
  export type JenisCutiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCuti
     */
    select?: JenisCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisCutiInclude<ExtArgs> | null
    /**
     * Filter, which JenisCutis to fetch.
     */
    where?: JenisCutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JenisCutis to fetch.
     */
    orderBy?: JenisCutiOrderByWithRelationInput | JenisCutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JenisCutis.
     */
    cursor?: JenisCutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JenisCutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JenisCutis.
     */
    skip?: number
    distinct?: JenisCutiScalarFieldEnum | JenisCutiScalarFieldEnum[]
  }

  /**
   * JenisCuti create
   */
  export type JenisCutiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCuti
     */
    select?: JenisCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisCutiInclude<ExtArgs> | null
    /**
     * The data needed to create a JenisCuti.
     */
    data: XOR<JenisCutiCreateInput, JenisCutiUncheckedCreateInput>
  }

  /**
   * JenisCuti createMany
   */
  export type JenisCutiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JenisCutis.
     */
    data: JenisCutiCreateManyInput | JenisCutiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JenisCuti createManyAndReturn
   */
  export type JenisCutiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCuti
     */
    select?: JenisCutiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many JenisCutis.
     */
    data: JenisCutiCreateManyInput | JenisCutiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JenisCuti update
   */
  export type JenisCutiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCuti
     */
    select?: JenisCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisCutiInclude<ExtArgs> | null
    /**
     * The data needed to update a JenisCuti.
     */
    data: XOR<JenisCutiUpdateInput, JenisCutiUncheckedUpdateInput>
    /**
     * Choose, which JenisCuti to update.
     */
    where: JenisCutiWhereUniqueInput
  }

  /**
   * JenisCuti updateMany
   */
  export type JenisCutiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JenisCutis.
     */
    data: XOR<JenisCutiUpdateManyMutationInput, JenisCutiUncheckedUpdateManyInput>
    /**
     * Filter which JenisCutis to update
     */
    where?: JenisCutiWhereInput
  }

  /**
   * JenisCuti upsert
   */
  export type JenisCutiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCuti
     */
    select?: JenisCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisCutiInclude<ExtArgs> | null
    /**
     * The filter to search for the JenisCuti to update in case it exists.
     */
    where: JenisCutiWhereUniqueInput
    /**
     * In case the JenisCuti found by the `where` argument doesn't exist, create a new JenisCuti with this data.
     */
    create: XOR<JenisCutiCreateInput, JenisCutiUncheckedCreateInput>
    /**
     * In case the JenisCuti was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JenisCutiUpdateInput, JenisCutiUncheckedUpdateInput>
  }

  /**
   * JenisCuti delete
   */
  export type JenisCutiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCuti
     */
    select?: JenisCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisCutiInclude<ExtArgs> | null
    /**
     * Filter which JenisCuti to delete.
     */
    where: JenisCutiWhereUniqueInput
  }

  /**
   * JenisCuti deleteMany
   */
  export type JenisCutiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JenisCutis to delete
     */
    where?: JenisCutiWhereInput
  }

  /**
   * JenisCuti.kuotaCuti
   */
  export type JenisCuti$kuotaCutiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
    where?: KuotaCutiWhereInput
    orderBy?: KuotaCutiOrderByWithRelationInput | KuotaCutiOrderByWithRelationInput[]
    cursor?: KuotaCutiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: KuotaCutiScalarFieldEnum | KuotaCutiScalarFieldEnum[]
  }

  /**
   * JenisCuti.cutiRequest
   */
  export type JenisCuti$cutiRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
    where?: CutiRequestWhereInput
    orderBy?: CutiRequestOrderByWithRelationInput | CutiRequestOrderByWithRelationInput[]
    cursor?: CutiRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CutiRequestScalarFieldEnum | CutiRequestScalarFieldEnum[]
  }

  /**
   * JenisCuti without action
   */
  export type JenisCutiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JenisCuti
     */
    select?: JenisCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JenisCutiInclude<ExtArgs> | null
  }


  /**
   * Model KuotaCuti
   */

  export type AggregateKuotaCuti = {
    _count: KuotaCutiCountAggregateOutputType | null
    _avg: KuotaCutiAvgAggregateOutputType | null
    _sum: KuotaCutiSumAggregateOutputType | null
    _min: KuotaCutiMinAggregateOutputType | null
    _max: KuotaCutiMaxAggregateOutputType | null
  }

  export type KuotaCutiAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    jenisCutiId: number | null
    tahun: number | null
    totalKuota: number | null
    sisaKuota: number | null
  }

  export type KuotaCutiSumAggregateOutputType = {
    id: number | null
    userId: number | null
    jenisCutiId: number | null
    tahun: number | null
    totalKuota: number | null
    sisaKuota: number | null
  }

  export type KuotaCutiMinAggregateOutputType = {
    id: number | null
    userId: number | null
    jenisCutiId: number | null
    tahun: number | null
    totalKuota: number | null
    sisaKuota: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type KuotaCutiMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    jenisCutiId: number | null
    tahun: number | null
    totalKuota: number | null
    sisaKuota: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type KuotaCutiCountAggregateOutputType = {
    id: number
    userId: number
    jenisCutiId: number
    tahun: number
    totalKuota: number
    sisaKuota: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type KuotaCutiAvgAggregateInputType = {
    id?: true
    userId?: true
    jenisCutiId?: true
    tahun?: true
    totalKuota?: true
    sisaKuota?: true
  }

  export type KuotaCutiSumAggregateInputType = {
    id?: true
    userId?: true
    jenisCutiId?: true
    tahun?: true
    totalKuota?: true
    sisaKuota?: true
  }

  export type KuotaCutiMinAggregateInputType = {
    id?: true
    userId?: true
    jenisCutiId?: true
    tahun?: true
    totalKuota?: true
    sisaKuota?: true
    createdAt?: true
    updatedAt?: true
  }

  export type KuotaCutiMaxAggregateInputType = {
    id?: true
    userId?: true
    jenisCutiId?: true
    tahun?: true
    totalKuota?: true
    sisaKuota?: true
    createdAt?: true
    updatedAt?: true
  }

  export type KuotaCutiCountAggregateInputType = {
    id?: true
    userId?: true
    jenisCutiId?: true
    tahun?: true
    totalKuota?: true
    sisaKuota?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type KuotaCutiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which KuotaCuti to aggregate.
     */
    where?: KuotaCutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KuotaCutis to fetch.
     */
    orderBy?: KuotaCutiOrderByWithRelationInput | KuotaCutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: KuotaCutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KuotaCutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KuotaCutis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned KuotaCutis
    **/
    _count?: true | KuotaCutiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: KuotaCutiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: KuotaCutiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: KuotaCutiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: KuotaCutiMaxAggregateInputType
  }

  export type GetKuotaCutiAggregateType<T extends KuotaCutiAggregateArgs> = {
        [P in keyof T & keyof AggregateKuotaCuti]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateKuotaCuti[P]>
      : GetScalarType<T[P], AggregateKuotaCuti[P]>
  }




  export type KuotaCutiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: KuotaCutiWhereInput
    orderBy?: KuotaCutiOrderByWithAggregationInput | KuotaCutiOrderByWithAggregationInput[]
    by: KuotaCutiScalarFieldEnum[] | KuotaCutiScalarFieldEnum
    having?: KuotaCutiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: KuotaCutiCountAggregateInputType | true
    _avg?: KuotaCutiAvgAggregateInputType
    _sum?: KuotaCutiSumAggregateInputType
    _min?: KuotaCutiMinAggregateInputType
    _max?: KuotaCutiMaxAggregateInputType
  }

  export type KuotaCutiGroupByOutputType = {
    id: number
    userId: number
    jenisCutiId: number
    tahun: number
    totalKuota: number
    sisaKuota: number
    createdAt: Date
    updatedAt: Date
    _count: KuotaCutiCountAggregateOutputType | null
    _avg: KuotaCutiAvgAggregateOutputType | null
    _sum: KuotaCutiSumAggregateOutputType | null
    _min: KuotaCutiMinAggregateOutputType | null
    _max: KuotaCutiMaxAggregateOutputType | null
  }

  type GetKuotaCutiGroupByPayload<T extends KuotaCutiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<KuotaCutiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof KuotaCutiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], KuotaCutiGroupByOutputType[P]>
            : GetScalarType<T[P], KuotaCutiGroupByOutputType[P]>
        }
      >
    >


  export type KuotaCutiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    jenisCutiId?: boolean
    tahun?: boolean
    totalKuota?: boolean
    sisaKuota?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    jenisCuti?: boolean | JenisCutiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kuotaCuti"]>

  export type KuotaCutiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    jenisCutiId?: boolean
    tahun?: boolean
    totalKuota?: boolean
    sisaKuota?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    jenisCuti?: boolean | JenisCutiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["kuotaCuti"]>

  export type KuotaCutiSelectScalar = {
    id?: boolean
    userId?: boolean
    jenisCutiId?: boolean
    tahun?: boolean
    totalKuota?: boolean
    sisaKuota?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type KuotaCutiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    jenisCuti?: boolean | JenisCutiDefaultArgs<ExtArgs>
  }
  export type KuotaCutiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    jenisCuti?: boolean | JenisCutiDefaultArgs<ExtArgs>
  }

  export type $KuotaCutiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "KuotaCuti"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      jenisCuti: Prisma.$JenisCutiPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      jenisCutiId: number
      tahun: number
      totalKuota: number
      sisaKuota: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["kuotaCuti"]>
    composites: {}
  }

  type KuotaCutiGetPayload<S extends boolean | null | undefined | KuotaCutiDefaultArgs> = $Result.GetResult<Prisma.$KuotaCutiPayload, S>

  type KuotaCutiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<KuotaCutiFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: KuotaCutiCountAggregateInputType | true
    }

  export interface KuotaCutiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['KuotaCuti'], meta: { name: 'KuotaCuti' } }
    /**
     * Find zero or one KuotaCuti that matches the filter.
     * @param {KuotaCutiFindUniqueArgs} args - Arguments to find a KuotaCuti
     * @example
     * // Get one KuotaCuti
     * const kuotaCuti = await prisma.kuotaCuti.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends KuotaCutiFindUniqueArgs>(args: SelectSubset<T, KuotaCutiFindUniqueArgs<ExtArgs>>): Prisma__KuotaCutiClient<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one KuotaCuti that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {KuotaCutiFindUniqueOrThrowArgs} args - Arguments to find a KuotaCuti
     * @example
     * // Get one KuotaCuti
     * const kuotaCuti = await prisma.kuotaCuti.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends KuotaCutiFindUniqueOrThrowArgs>(args: SelectSubset<T, KuotaCutiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__KuotaCutiClient<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first KuotaCuti that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KuotaCutiFindFirstArgs} args - Arguments to find a KuotaCuti
     * @example
     * // Get one KuotaCuti
     * const kuotaCuti = await prisma.kuotaCuti.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends KuotaCutiFindFirstArgs>(args?: SelectSubset<T, KuotaCutiFindFirstArgs<ExtArgs>>): Prisma__KuotaCutiClient<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first KuotaCuti that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KuotaCutiFindFirstOrThrowArgs} args - Arguments to find a KuotaCuti
     * @example
     * // Get one KuotaCuti
     * const kuotaCuti = await prisma.kuotaCuti.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends KuotaCutiFindFirstOrThrowArgs>(args?: SelectSubset<T, KuotaCutiFindFirstOrThrowArgs<ExtArgs>>): Prisma__KuotaCutiClient<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more KuotaCutis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KuotaCutiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all KuotaCutis
     * const kuotaCutis = await prisma.kuotaCuti.findMany()
     * 
     * // Get first 10 KuotaCutis
     * const kuotaCutis = await prisma.kuotaCuti.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const kuotaCutiWithIdOnly = await prisma.kuotaCuti.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends KuotaCutiFindManyArgs>(args?: SelectSubset<T, KuotaCutiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a KuotaCuti.
     * @param {KuotaCutiCreateArgs} args - Arguments to create a KuotaCuti.
     * @example
     * // Create one KuotaCuti
     * const KuotaCuti = await prisma.kuotaCuti.create({
     *   data: {
     *     // ... data to create a KuotaCuti
     *   }
     * })
     * 
     */
    create<T extends KuotaCutiCreateArgs>(args: SelectSubset<T, KuotaCutiCreateArgs<ExtArgs>>): Prisma__KuotaCutiClient<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many KuotaCutis.
     * @param {KuotaCutiCreateManyArgs} args - Arguments to create many KuotaCutis.
     * @example
     * // Create many KuotaCutis
     * const kuotaCuti = await prisma.kuotaCuti.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends KuotaCutiCreateManyArgs>(args?: SelectSubset<T, KuotaCutiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many KuotaCutis and returns the data saved in the database.
     * @param {KuotaCutiCreateManyAndReturnArgs} args - Arguments to create many KuotaCutis.
     * @example
     * // Create many KuotaCutis
     * const kuotaCuti = await prisma.kuotaCuti.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many KuotaCutis and only return the `id`
     * const kuotaCutiWithIdOnly = await prisma.kuotaCuti.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends KuotaCutiCreateManyAndReturnArgs>(args?: SelectSubset<T, KuotaCutiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a KuotaCuti.
     * @param {KuotaCutiDeleteArgs} args - Arguments to delete one KuotaCuti.
     * @example
     * // Delete one KuotaCuti
     * const KuotaCuti = await prisma.kuotaCuti.delete({
     *   where: {
     *     // ... filter to delete one KuotaCuti
     *   }
     * })
     * 
     */
    delete<T extends KuotaCutiDeleteArgs>(args: SelectSubset<T, KuotaCutiDeleteArgs<ExtArgs>>): Prisma__KuotaCutiClient<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one KuotaCuti.
     * @param {KuotaCutiUpdateArgs} args - Arguments to update one KuotaCuti.
     * @example
     * // Update one KuotaCuti
     * const kuotaCuti = await prisma.kuotaCuti.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends KuotaCutiUpdateArgs>(args: SelectSubset<T, KuotaCutiUpdateArgs<ExtArgs>>): Prisma__KuotaCutiClient<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more KuotaCutis.
     * @param {KuotaCutiDeleteManyArgs} args - Arguments to filter KuotaCutis to delete.
     * @example
     * // Delete a few KuotaCutis
     * const { count } = await prisma.kuotaCuti.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends KuotaCutiDeleteManyArgs>(args?: SelectSubset<T, KuotaCutiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more KuotaCutis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KuotaCutiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many KuotaCutis
     * const kuotaCuti = await prisma.kuotaCuti.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends KuotaCutiUpdateManyArgs>(args: SelectSubset<T, KuotaCutiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one KuotaCuti.
     * @param {KuotaCutiUpsertArgs} args - Arguments to update or create a KuotaCuti.
     * @example
     * // Update or create a KuotaCuti
     * const kuotaCuti = await prisma.kuotaCuti.upsert({
     *   create: {
     *     // ... data to create a KuotaCuti
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the KuotaCuti we want to update
     *   }
     * })
     */
    upsert<T extends KuotaCutiUpsertArgs>(args: SelectSubset<T, KuotaCutiUpsertArgs<ExtArgs>>): Prisma__KuotaCutiClient<$Result.GetResult<Prisma.$KuotaCutiPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of KuotaCutis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KuotaCutiCountArgs} args - Arguments to filter KuotaCutis to count.
     * @example
     * // Count the number of KuotaCutis
     * const count = await prisma.kuotaCuti.count({
     *   where: {
     *     // ... the filter for the KuotaCutis we want to count
     *   }
     * })
    **/
    count<T extends KuotaCutiCountArgs>(
      args?: Subset<T, KuotaCutiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], KuotaCutiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a KuotaCuti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KuotaCutiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends KuotaCutiAggregateArgs>(args: Subset<T, KuotaCutiAggregateArgs>): Prisma.PrismaPromise<GetKuotaCutiAggregateType<T>>

    /**
     * Group by KuotaCuti.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {KuotaCutiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends KuotaCutiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: KuotaCutiGroupByArgs['orderBy'] }
        : { orderBy?: KuotaCutiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, KuotaCutiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetKuotaCutiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the KuotaCuti model
   */
  readonly fields: KuotaCutiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for KuotaCuti.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__KuotaCutiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    jenisCuti<T extends JenisCutiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JenisCutiDefaultArgs<ExtArgs>>): Prisma__JenisCutiClient<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the KuotaCuti model
   */ 
  interface KuotaCutiFieldRefs {
    readonly id: FieldRef<"KuotaCuti", 'Int'>
    readonly userId: FieldRef<"KuotaCuti", 'Int'>
    readonly jenisCutiId: FieldRef<"KuotaCuti", 'Int'>
    readonly tahun: FieldRef<"KuotaCuti", 'Int'>
    readonly totalKuota: FieldRef<"KuotaCuti", 'Int'>
    readonly sisaKuota: FieldRef<"KuotaCuti", 'Int'>
    readonly createdAt: FieldRef<"KuotaCuti", 'DateTime'>
    readonly updatedAt: FieldRef<"KuotaCuti", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * KuotaCuti findUnique
   */
  export type KuotaCutiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
    /**
     * Filter, which KuotaCuti to fetch.
     */
    where: KuotaCutiWhereUniqueInput
  }

  /**
   * KuotaCuti findUniqueOrThrow
   */
  export type KuotaCutiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
    /**
     * Filter, which KuotaCuti to fetch.
     */
    where: KuotaCutiWhereUniqueInput
  }

  /**
   * KuotaCuti findFirst
   */
  export type KuotaCutiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
    /**
     * Filter, which KuotaCuti to fetch.
     */
    where?: KuotaCutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KuotaCutis to fetch.
     */
    orderBy?: KuotaCutiOrderByWithRelationInput | KuotaCutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for KuotaCutis.
     */
    cursor?: KuotaCutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KuotaCutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KuotaCutis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of KuotaCutis.
     */
    distinct?: KuotaCutiScalarFieldEnum | KuotaCutiScalarFieldEnum[]
  }

  /**
   * KuotaCuti findFirstOrThrow
   */
  export type KuotaCutiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
    /**
     * Filter, which KuotaCuti to fetch.
     */
    where?: KuotaCutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KuotaCutis to fetch.
     */
    orderBy?: KuotaCutiOrderByWithRelationInput | KuotaCutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for KuotaCutis.
     */
    cursor?: KuotaCutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KuotaCutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KuotaCutis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of KuotaCutis.
     */
    distinct?: KuotaCutiScalarFieldEnum | KuotaCutiScalarFieldEnum[]
  }

  /**
   * KuotaCuti findMany
   */
  export type KuotaCutiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
    /**
     * Filter, which KuotaCutis to fetch.
     */
    where?: KuotaCutiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of KuotaCutis to fetch.
     */
    orderBy?: KuotaCutiOrderByWithRelationInput | KuotaCutiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing KuotaCutis.
     */
    cursor?: KuotaCutiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` KuotaCutis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` KuotaCutis.
     */
    skip?: number
    distinct?: KuotaCutiScalarFieldEnum | KuotaCutiScalarFieldEnum[]
  }

  /**
   * KuotaCuti create
   */
  export type KuotaCutiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
    /**
     * The data needed to create a KuotaCuti.
     */
    data: XOR<KuotaCutiCreateInput, KuotaCutiUncheckedCreateInput>
  }

  /**
   * KuotaCuti createMany
   */
  export type KuotaCutiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many KuotaCutis.
     */
    data: KuotaCutiCreateManyInput | KuotaCutiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * KuotaCuti createManyAndReturn
   */
  export type KuotaCutiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many KuotaCutis.
     */
    data: KuotaCutiCreateManyInput | KuotaCutiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * KuotaCuti update
   */
  export type KuotaCutiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
    /**
     * The data needed to update a KuotaCuti.
     */
    data: XOR<KuotaCutiUpdateInput, KuotaCutiUncheckedUpdateInput>
    /**
     * Choose, which KuotaCuti to update.
     */
    where: KuotaCutiWhereUniqueInput
  }

  /**
   * KuotaCuti updateMany
   */
  export type KuotaCutiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update KuotaCutis.
     */
    data: XOR<KuotaCutiUpdateManyMutationInput, KuotaCutiUncheckedUpdateManyInput>
    /**
     * Filter which KuotaCutis to update
     */
    where?: KuotaCutiWhereInput
  }

  /**
   * KuotaCuti upsert
   */
  export type KuotaCutiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
    /**
     * The filter to search for the KuotaCuti to update in case it exists.
     */
    where: KuotaCutiWhereUniqueInput
    /**
     * In case the KuotaCuti found by the `where` argument doesn't exist, create a new KuotaCuti with this data.
     */
    create: XOR<KuotaCutiCreateInput, KuotaCutiUncheckedCreateInput>
    /**
     * In case the KuotaCuti was found with the provided `where` argument, update it with this data.
     */
    update: XOR<KuotaCutiUpdateInput, KuotaCutiUncheckedUpdateInput>
  }

  /**
   * KuotaCuti delete
   */
  export type KuotaCutiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
    /**
     * Filter which KuotaCuti to delete.
     */
    where: KuotaCutiWhereUniqueInput
  }

  /**
   * KuotaCuti deleteMany
   */
  export type KuotaCutiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which KuotaCutis to delete
     */
    where?: KuotaCutiWhereInput
  }

  /**
   * KuotaCuti without action
   */
  export type KuotaCutiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the KuotaCuti
     */
    select?: KuotaCutiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: KuotaCutiInclude<ExtArgs> | null
  }


  /**
   * Model CutiRequest
   */

  export type AggregateCutiRequest = {
    _count: CutiRequestCountAggregateOutputType | null
    _avg: CutiRequestAvgAggregateOutputType | null
    _sum: CutiRequestSumAggregateOutputType | null
    _min: CutiRequestMinAggregateOutputType | null
    _max: CutiRequestMaxAggregateOutputType | null
  }

  export type CutiRequestAvgAggregateOutputType = {
    id: number | null
    userId: number | null
    jenisCutiId: number | null
    approvedBy: number | null
  }

  export type CutiRequestSumAggregateOutputType = {
    id: number | null
    userId: number | null
    jenisCutiId: number | null
    approvedBy: number | null
  }

  export type CutiRequestMinAggregateOutputType = {
    id: number | null
    userId: number | null
    jenisCutiId: number | null
    tanggalMulai: Date | null
    tanggalSelesai: Date | null
    alasan: string | null
    status: $Enums.StatusCuti | null
    approvedAt: Date | null
    approvedBy: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CutiRequestMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    jenisCutiId: number | null
    tanggalMulai: Date | null
    tanggalSelesai: Date | null
    alasan: string | null
    status: $Enums.StatusCuti | null
    approvedAt: Date | null
    approvedBy: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CutiRequestCountAggregateOutputType = {
    id: number
    userId: number
    jenisCutiId: number
    tanggalMulai: number
    tanggalSelesai: number
    alasan: number
    status: number
    approvedAt: number
    approvedBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CutiRequestAvgAggregateInputType = {
    id?: true
    userId?: true
    jenisCutiId?: true
    approvedBy?: true
  }

  export type CutiRequestSumAggregateInputType = {
    id?: true
    userId?: true
    jenisCutiId?: true
    approvedBy?: true
  }

  export type CutiRequestMinAggregateInputType = {
    id?: true
    userId?: true
    jenisCutiId?: true
    tanggalMulai?: true
    tanggalSelesai?: true
    alasan?: true
    status?: true
    approvedAt?: true
    approvedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CutiRequestMaxAggregateInputType = {
    id?: true
    userId?: true
    jenisCutiId?: true
    tanggalMulai?: true
    tanggalSelesai?: true
    alasan?: true
    status?: true
    approvedAt?: true
    approvedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CutiRequestCountAggregateInputType = {
    id?: true
    userId?: true
    jenisCutiId?: true
    tanggalMulai?: true
    tanggalSelesai?: true
    alasan?: true
    status?: true
    approvedAt?: true
    approvedBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CutiRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CutiRequest to aggregate.
     */
    where?: CutiRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CutiRequests to fetch.
     */
    orderBy?: CutiRequestOrderByWithRelationInput | CutiRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CutiRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CutiRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CutiRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CutiRequests
    **/
    _count?: true | CutiRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CutiRequestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CutiRequestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CutiRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CutiRequestMaxAggregateInputType
  }

  export type GetCutiRequestAggregateType<T extends CutiRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateCutiRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCutiRequest[P]>
      : GetScalarType<T[P], AggregateCutiRequest[P]>
  }




  export type CutiRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CutiRequestWhereInput
    orderBy?: CutiRequestOrderByWithAggregationInput | CutiRequestOrderByWithAggregationInput[]
    by: CutiRequestScalarFieldEnum[] | CutiRequestScalarFieldEnum
    having?: CutiRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CutiRequestCountAggregateInputType | true
    _avg?: CutiRequestAvgAggregateInputType
    _sum?: CutiRequestSumAggregateInputType
    _min?: CutiRequestMinAggregateInputType
    _max?: CutiRequestMaxAggregateInputType
  }

  export type CutiRequestGroupByOutputType = {
    id: number
    userId: number
    jenisCutiId: number
    tanggalMulai: Date
    tanggalSelesai: Date
    alasan: string
    status: $Enums.StatusCuti
    approvedAt: Date | null
    approvedBy: number | null
    createdAt: Date
    updatedAt: Date
    _count: CutiRequestCountAggregateOutputType | null
    _avg: CutiRequestAvgAggregateOutputType | null
    _sum: CutiRequestSumAggregateOutputType | null
    _min: CutiRequestMinAggregateOutputType | null
    _max: CutiRequestMaxAggregateOutputType | null
  }

  type GetCutiRequestGroupByPayload<T extends CutiRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CutiRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CutiRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CutiRequestGroupByOutputType[P]>
            : GetScalarType<T[P], CutiRequestGroupByOutputType[P]>
        }
      >
    >


  export type CutiRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    jenisCutiId?: boolean
    tanggalMulai?: boolean
    tanggalSelesai?: boolean
    alasan?: boolean
    status?: boolean
    approvedAt?: boolean
    approvedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    jenisCuti?: boolean | JenisCutiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cutiRequest"]>

  export type CutiRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    jenisCutiId?: boolean
    tanggalMulai?: boolean
    tanggalSelesai?: boolean
    alasan?: boolean
    status?: boolean
    approvedAt?: boolean
    approvedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    jenisCuti?: boolean | JenisCutiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cutiRequest"]>

  export type CutiRequestSelectScalar = {
    id?: boolean
    userId?: boolean
    jenisCutiId?: boolean
    tanggalMulai?: boolean
    tanggalSelesai?: boolean
    alasan?: boolean
    status?: boolean
    approvedAt?: boolean
    approvedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CutiRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    jenisCuti?: boolean | JenisCutiDefaultArgs<ExtArgs>
  }
  export type CutiRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    jenisCuti?: boolean | JenisCutiDefaultArgs<ExtArgs>
  }

  export type $CutiRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CutiRequest"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      jenisCuti: Prisma.$JenisCutiPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      jenisCutiId: number
      tanggalMulai: Date
      tanggalSelesai: Date
      alasan: string
      status: $Enums.StatusCuti
      approvedAt: Date | null
      approvedBy: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["cutiRequest"]>
    composites: {}
  }

  type CutiRequestGetPayload<S extends boolean | null | undefined | CutiRequestDefaultArgs> = $Result.GetResult<Prisma.$CutiRequestPayload, S>

  type CutiRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CutiRequestFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CutiRequestCountAggregateInputType | true
    }

  export interface CutiRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CutiRequest'], meta: { name: 'CutiRequest' } }
    /**
     * Find zero or one CutiRequest that matches the filter.
     * @param {CutiRequestFindUniqueArgs} args - Arguments to find a CutiRequest
     * @example
     * // Get one CutiRequest
     * const cutiRequest = await prisma.cutiRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CutiRequestFindUniqueArgs>(args: SelectSubset<T, CutiRequestFindUniqueArgs<ExtArgs>>): Prisma__CutiRequestClient<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CutiRequest that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CutiRequestFindUniqueOrThrowArgs} args - Arguments to find a CutiRequest
     * @example
     * // Get one CutiRequest
     * const cutiRequest = await prisma.cutiRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CutiRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, CutiRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CutiRequestClient<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CutiRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CutiRequestFindFirstArgs} args - Arguments to find a CutiRequest
     * @example
     * // Get one CutiRequest
     * const cutiRequest = await prisma.cutiRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CutiRequestFindFirstArgs>(args?: SelectSubset<T, CutiRequestFindFirstArgs<ExtArgs>>): Prisma__CutiRequestClient<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CutiRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CutiRequestFindFirstOrThrowArgs} args - Arguments to find a CutiRequest
     * @example
     * // Get one CutiRequest
     * const cutiRequest = await prisma.cutiRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CutiRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, CutiRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__CutiRequestClient<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CutiRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CutiRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CutiRequests
     * const cutiRequests = await prisma.cutiRequest.findMany()
     * 
     * // Get first 10 CutiRequests
     * const cutiRequests = await prisma.cutiRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cutiRequestWithIdOnly = await prisma.cutiRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CutiRequestFindManyArgs>(args?: SelectSubset<T, CutiRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CutiRequest.
     * @param {CutiRequestCreateArgs} args - Arguments to create a CutiRequest.
     * @example
     * // Create one CutiRequest
     * const CutiRequest = await prisma.cutiRequest.create({
     *   data: {
     *     // ... data to create a CutiRequest
     *   }
     * })
     * 
     */
    create<T extends CutiRequestCreateArgs>(args: SelectSubset<T, CutiRequestCreateArgs<ExtArgs>>): Prisma__CutiRequestClient<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CutiRequests.
     * @param {CutiRequestCreateManyArgs} args - Arguments to create many CutiRequests.
     * @example
     * // Create many CutiRequests
     * const cutiRequest = await prisma.cutiRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CutiRequestCreateManyArgs>(args?: SelectSubset<T, CutiRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CutiRequests and returns the data saved in the database.
     * @param {CutiRequestCreateManyAndReturnArgs} args - Arguments to create many CutiRequests.
     * @example
     * // Create many CutiRequests
     * const cutiRequest = await prisma.cutiRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CutiRequests and only return the `id`
     * const cutiRequestWithIdOnly = await prisma.cutiRequest.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CutiRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, CutiRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a CutiRequest.
     * @param {CutiRequestDeleteArgs} args - Arguments to delete one CutiRequest.
     * @example
     * // Delete one CutiRequest
     * const CutiRequest = await prisma.cutiRequest.delete({
     *   where: {
     *     // ... filter to delete one CutiRequest
     *   }
     * })
     * 
     */
    delete<T extends CutiRequestDeleteArgs>(args: SelectSubset<T, CutiRequestDeleteArgs<ExtArgs>>): Prisma__CutiRequestClient<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CutiRequest.
     * @param {CutiRequestUpdateArgs} args - Arguments to update one CutiRequest.
     * @example
     * // Update one CutiRequest
     * const cutiRequest = await prisma.cutiRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CutiRequestUpdateArgs>(args: SelectSubset<T, CutiRequestUpdateArgs<ExtArgs>>): Prisma__CutiRequestClient<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CutiRequests.
     * @param {CutiRequestDeleteManyArgs} args - Arguments to filter CutiRequests to delete.
     * @example
     * // Delete a few CutiRequests
     * const { count } = await prisma.cutiRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CutiRequestDeleteManyArgs>(args?: SelectSubset<T, CutiRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CutiRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CutiRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CutiRequests
     * const cutiRequest = await prisma.cutiRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CutiRequestUpdateManyArgs>(args: SelectSubset<T, CutiRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CutiRequest.
     * @param {CutiRequestUpsertArgs} args - Arguments to update or create a CutiRequest.
     * @example
     * // Update or create a CutiRequest
     * const cutiRequest = await prisma.cutiRequest.upsert({
     *   create: {
     *     // ... data to create a CutiRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CutiRequest we want to update
     *   }
     * })
     */
    upsert<T extends CutiRequestUpsertArgs>(args: SelectSubset<T, CutiRequestUpsertArgs<ExtArgs>>): Prisma__CutiRequestClient<$Result.GetResult<Prisma.$CutiRequestPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CutiRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CutiRequestCountArgs} args - Arguments to filter CutiRequests to count.
     * @example
     * // Count the number of CutiRequests
     * const count = await prisma.cutiRequest.count({
     *   where: {
     *     // ... the filter for the CutiRequests we want to count
     *   }
     * })
    **/
    count<T extends CutiRequestCountArgs>(
      args?: Subset<T, CutiRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CutiRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CutiRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CutiRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CutiRequestAggregateArgs>(args: Subset<T, CutiRequestAggregateArgs>): Prisma.PrismaPromise<GetCutiRequestAggregateType<T>>

    /**
     * Group by CutiRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CutiRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CutiRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CutiRequestGroupByArgs['orderBy'] }
        : { orderBy?: CutiRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CutiRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCutiRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CutiRequest model
   */
  readonly fields: CutiRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CutiRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CutiRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    jenisCuti<T extends JenisCutiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, JenisCutiDefaultArgs<ExtArgs>>): Prisma__JenisCutiClient<$Result.GetResult<Prisma.$JenisCutiPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CutiRequest model
   */ 
  interface CutiRequestFieldRefs {
    readonly id: FieldRef<"CutiRequest", 'Int'>
    readonly userId: FieldRef<"CutiRequest", 'Int'>
    readonly jenisCutiId: FieldRef<"CutiRequest", 'Int'>
    readonly tanggalMulai: FieldRef<"CutiRequest", 'DateTime'>
    readonly tanggalSelesai: FieldRef<"CutiRequest", 'DateTime'>
    readonly alasan: FieldRef<"CutiRequest", 'String'>
    readonly status: FieldRef<"CutiRequest", 'StatusCuti'>
    readonly approvedAt: FieldRef<"CutiRequest", 'DateTime'>
    readonly approvedBy: FieldRef<"CutiRequest", 'Int'>
    readonly createdAt: FieldRef<"CutiRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"CutiRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CutiRequest findUnique
   */
  export type CutiRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
    /**
     * Filter, which CutiRequest to fetch.
     */
    where: CutiRequestWhereUniqueInput
  }

  /**
   * CutiRequest findUniqueOrThrow
   */
  export type CutiRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
    /**
     * Filter, which CutiRequest to fetch.
     */
    where: CutiRequestWhereUniqueInput
  }

  /**
   * CutiRequest findFirst
   */
  export type CutiRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
    /**
     * Filter, which CutiRequest to fetch.
     */
    where?: CutiRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CutiRequests to fetch.
     */
    orderBy?: CutiRequestOrderByWithRelationInput | CutiRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CutiRequests.
     */
    cursor?: CutiRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CutiRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CutiRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CutiRequests.
     */
    distinct?: CutiRequestScalarFieldEnum | CutiRequestScalarFieldEnum[]
  }

  /**
   * CutiRequest findFirstOrThrow
   */
  export type CutiRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
    /**
     * Filter, which CutiRequest to fetch.
     */
    where?: CutiRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CutiRequests to fetch.
     */
    orderBy?: CutiRequestOrderByWithRelationInput | CutiRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CutiRequests.
     */
    cursor?: CutiRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CutiRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CutiRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CutiRequests.
     */
    distinct?: CutiRequestScalarFieldEnum | CutiRequestScalarFieldEnum[]
  }

  /**
   * CutiRequest findMany
   */
  export type CutiRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
    /**
     * Filter, which CutiRequests to fetch.
     */
    where?: CutiRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CutiRequests to fetch.
     */
    orderBy?: CutiRequestOrderByWithRelationInput | CutiRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CutiRequests.
     */
    cursor?: CutiRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CutiRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CutiRequests.
     */
    skip?: number
    distinct?: CutiRequestScalarFieldEnum | CutiRequestScalarFieldEnum[]
  }

  /**
   * CutiRequest create
   */
  export type CutiRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a CutiRequest.
     */
    data: XOR<CutiRequestCreateInput, CutiRequestUncheckedCreateInput>
  }

  /**
   * CutiRequest createMany
   */
  export type CutiRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CutiRequests.
     */
    data: CutiRequestCreateManyInput | CutiRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CutiRequest createManyAndReturn
   */
  export type CutiRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many CutiRequests.
     */
    data: CutiRequestCreateManyInput | CutiRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CutiRequest update
   */
  export type CutiRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a CutiRequest.
     */
    data: XOR<CutiRequestUpdateInput, CutiRequestUncheckedUpdateInput>
    /**
     * Choose, which CutiRequest to update.
     */
    where: CutiRequestWhereUniqueInput
  }

  /**
   * CutiRequest updateMany
   */
  export type CutiRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CutiRequests.
     */
    data: XOR<CutiRequestUpdateManyMutationInput, CutiRequestUncheckedUpdateManyInput>
    /**
     * Filter which CutiRequests to update
     */
    where?: CutiRequestWhereInput
  }

  /**
   * CutiRequest upsert
   */
  export type CutiRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the CutiRequest to update in case it exists.
     */
    where: CutiRequestWhereUniqueInput
    /**
     * In case the CutiRequest found by the `where` argument doesn't exist, create a new CutiRequest with this data.
     */
    create: XOR<CutiRequestCreateInput, CutiRequestUncheckedCreateInput>
    /**
     * In case the CutiRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CutiRequestUpdateInput, CutiRequestUncheckedUpdateInput>
  }

  /**
   * CutiRequest delete
   */
  export type CutiRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
    /**
     * Filter which CutiRequest to delete.
     */
    where: CutiRequestWhereUniqueInput
  }

  /**
   * CutiRequest deleteMany
   */
  export type CutiRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CutiRequests to delete
     */
    where?: CutiRequestWhereInput
  }

  /**
   * CutiRequest without action
   */
  export type CutiRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CutiRequest
     */
    select?: CutiRequestSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CutiRequestInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    nama: 'nama',
    nip: 'nip',
    jabatan: 'jabatan',
    role: 'role',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const JenisCutiScalarFieldEnum: {
    id: 'id',
    nama: 'nama',
    deskripsi: 'deskripsi',
    maxHari: 'maxHari'
  };

  export type JenisCutiScalarFieldEnum = (typeof JenisCutiScalarFieldEnum)[keyof typeof JenisCutiScalarFieldEnum]


  export const KuotaCutiScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    jenisCutiId: 'jenisCutiId',
    tahun: 'tahun',
    totalKuota: 'totalKuota',
    sisaKuota: 'sisaKuota',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type KuotaCutiScalarFieldEnum = (typeof KuotaCutiScalarFieldEnum)[keyof typeof KuotaCutiScalarFieldEnum]


  export const CutiRequestScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    jenisCutiId: 'jenisCutiId',
    tanggalMulai: 'tanggalMulai',
    tanggalSelesai: 'tanggalSelesai',
    alasan: 'alasan',
    status: 'status',
    approvedAt: 'approvedAt',
    approvedBy: 'approvedBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CutiRequestScalarFieldEnum = (typeof CutiRequestScalarFieldEnum)[keyof typeof CutiRequestScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Role'
   */
  export type EnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role'>
    


  /**
   * Reference to a field of type 'Role[]'
   */
  export type ListEnumRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Role[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'StatusCuti'
   */
  export type EnumStatusCutiFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusCuti'>
    


  /**
   * Reference to a field of type 'StatusCuti[]'
   */
  export type ListEnumStatusCutiFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StatusCuti[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    nama?: StringFilter<"User"> | string
    nip?: StringNullableFilter<"User"> | string | null
    jabatan?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    kuotaCuti?: KuotaCutiListRelationFilter
    cutiRequest?: CutiRequestListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    nama?: SortOrder
    nip?: SortOrderInput | SortOrder
    jabatan?: SortOrderInput | SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    kuotaCuti?: KuotaCutiOrderByRelationAggregateInput
    cutiRequest?: CutiRequestOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    nip?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    password?: StringFilter<"User"> | string
    nama?: StringFilter<"User"> | string
    jabatan?: StringNullableFilter<"User"> | string | null
    role?: EnumRoleFilter<"User"> | $Enums.Role
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    kuotaCuti?: KuotaCutiListRelationFilter
    cutiRequest?: CutiRequestListRelationFilter
  }, "id" | "email" | "nip">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    nama?: SortOrder
    nip?: SortOrderInput | SortOrder
    jabatan?: SortOrderInput | SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    nama?: StringWithAggregatesFilter<"User"> | string
    nip?: StringNullableWithAggregatesFilter<"User"> | string | null
    jabatan?: StringNullableWithAggregatesFilter<"User"> | string | null
    role?: EnumRoleWithAggregatesFilter<"User"> | $Enums.Role
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type JenisCutiWhereInput = {
    AND?: JenisCutiWhereInput | JenisCutiWhereInput[]
    OR?: JenisCutiWhereInput[]
    NOT?: JenisCutiWhereInput | JenisCutiWhereInput[]
    id?: IntFilter<"JenisCuti"> | number
    nama?: StringFilter<"JenisCuti"> | string
    deskripsi?: StringNullableFilter<"JenisCuti"> | string | null
    maxHari?: IntFilter<"JenisCuti"> | number
    kuotaCuti?: KuotaCutiListRelationFilter
    cutiRequest?: CutiRequestListRelationFilter
  }

  export type JenisCutiOrderByWithRelationInput = {
    id?: SortOrder
    nama?: SortOrder
    deskripsi?: SortOrderInput | SortOrder
    maxHari?: SortOrder
    kuotaCuti?: KuotaCutiOrderByRelationAggregateInput
    cutiRequest?: CutiRequestOrderByRelationAggregateInput
  }

  export type JenisCutiWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nama?: string
    AND?: JenisCutiWhereInput | JenisCutiWhereInput[]
    OR?: JenisCutiWhereInput[]
    NOT?: JenisCutiWhereInput | JenisCutiWhereInput[]
    deskripsi?: StringNullableFilter<"JenisCuti"> | string | null
    maxHari?: IntFilter<"JenisCuti"> | number
    kuotaCuti?: KuotaCutiListRelationFilter
    cutiRequest?: CutiRequestListRelationFilter
  }, "id" | "nama">

  export type JenisCutiOrderByWithAggregationInput = {
    id?: SortOrder
    nama?: SortOrder
    deskripsi?: SortOrderInput | SortOrder
    maxHari?: SortOrder
    _count?: JenisCutiCountOrderByAggregateInput
    _avg?: JenisCutiAvgOrderByAggregateInput
    _max?: JenisCutiMaxOrderByAggregateInput
    _min?: JenisCutiMinOrderByAggregateInput
    _sum?: JenisCutiSumOrderByAggregateInput
  }

  export type JenisCutiScalarWhereWithAggregatesInput = {
    AND?: JenisCutiScalarWhereWithAggregatesInput | JenisCutiScalarWhereWithAggregatesInput[]
    OR?: JenisCutiScalarWhereWithAggregatesInput[]
    NOT?: JenisCutiScalarWhereWithAggregatesInput | JenisCutiScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"JenisCuti"> | number
    nama?: StringWithAggregatesFilter<"JenisCuti"> | string
    deskripsi?: StringNullableWithAggregatesFilter<"JenisCuti"> | string | null
    maxHari?: IntWithAggregatesFilter<"JenisCuti"> | number
  }

  export type KuotaCutiWhereInput = {
    AND?: KuotaCutiWhereInput | KuotaCutiWhereInput[]
    OR?: KuotaCutiWhereInput[]
    NOT?: KuotaCutiWhereInput | KuotaCutiWhereInput[]
    id?: IntFilter<"KuotaCuti"> | number
    userId?: IntFilter<"KuotaCuti"> | number
    jenisCutiId?: IntFilter<"KuotaCuti"> | number
    tahun?: IntFilter<"KuotaCuti"> | number
    totalKuota?: IntFilter<"KuotaCuti"> | number
    sisaKuota?: IntFilter<"KuotaCuti"> | number
    createdAt?: DateTimeFilter<"KuotaCuti"> | Date | string
    updatedAt?: DateTimeFilter<"KuotaCuti"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    jenisCuti?: XOR<JenisCutiRelationFilter, JenisCutiWhereInput>
  }

  export type KuotaCutiOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tahun?: SortOrder
    totalKuota?: SortOrder
    sisaKuota?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    jenisCuti?: JenisCutiOrderByWithRelationInput
  }

  export type KuotaCutiWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    userId_jenisCutiId_tahun?: KuotaCutiUserIdJenisCutiIdTahunCompoundUniqueInput
    AND?: KuotaCutiWhereInput | KuotaCutiWhereInput[]
    OR?: KuotaCutiWhereInput[]
    NOT?: KuotaCutiWhereInput | KuotaCutiWhereInput[]
    userId?: IntFilter<"KuotaCuti"> | number
    jenisCutiId?: IntFilter<"KuotaCuti"> | number
    tahun?: IntFilter<"KuotaCuti"> | number
    totalKuota?: IntFilter<"KuotaCuti"> | number
    sisaKuota?: IntFilter<"KuotaCuti"> | number
    createdAt?: DateTimeFilter<"KuotaCuti"> | Date | string
    updatedAt?: DateTimeFilter<"KuotaCuti"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    jenisCuti?: XOR<JenisCutiRelationFilter, JenisCutiWhereInput>
  }, "id" | "userId_jenisCutiId_tahun">

  export type KuotaCutiOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tahun?: SortOrder
    totalKuota?: SortOrder
    sisaKuota?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: KuotaCutiCountOrderByAggregateInput
    _avg?: KuotaCutiAvgOrderByAggregateInput
    _max?: KuotaCutiMaxOrderByAggregateInput
    _min?: KuotaCutiMinOrderByAggregateInput
    _sum?: KuotaCutiSumOrderByAggregateInput
  }

  export type KuotaCutiScalarWhereWithAggregatesInput = {
    AND?: KuotaCutiScalarWhereWithAggregatesInput | KuotaCutiScalarWhereWithAggregatesInput[]
    OR?: KuotaCutiScalarWhereWithAggregatesInput[]
    NOT?: KuotaCutiScalarWhereWithAggregatesInput | KuotaCutiScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"KuotaCuti"> | number
    userId?: IntWithAggregatesFilter<"KuotaCuti"> | number
    jenisCutiId?: IntWithAggregatesFilter<"KuotaCuti"> | number
    tahun?: IntWithAggregatesFilter<"KuotaCuti"> | number
    totalKuota?: IntWithAggregatesFilter<"KuotaCuti"> | number
    sisaKuota?: IntWithAggregatesFilter<"KuotaCuti"> | number
    createdAt?: DateTimeWithAggregatesFilter<"KuotaCuti"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"KuotaCuti"> | Date | string
  }

  export type CutiRequestWhereInput = {
    AND?: CutiRequestWhereInput | CutiRequestWhereInput[]
    OR?: CutiRequestWhereInput[]
    NOT?: CutiRequestWhereInput | CutiRequestWhereInput[]
    id?: IntFilter<"CutiRequest"> | number
    userId?: IntFilter<"CutiRequest"> | number
    jenisCutiId?: IntFilter<"CutiRequest"> | number
    tanggalMulai?: DateTimeFilter<"CutiRequest"> | Date | string
    tanggalSelesai?: DateTimeFilter<"CutiRequest"> | Date | string
    alasan?: StringFilter<"CutiRequest"> | string
    status?: EnumStatusCutiFilter<"CutiRequest"> | $Enums.StatusCuti
    approvedAt?: DateTimeNullableFilter<"CutiRequest"> | Date | string | null
    approvedBy?: IntNullableFilter<"CutiRequest"> | number | null
    createdAt?: DateTimeFilter<"CutiRequest"> | Date | string
    updatedAt?: DateTimeFilter<"CutiRequest"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    jenisCuti?: XOR<JenisCutiRelationFilter, JenisCutiWhereInput>
  }

  export type CutiRequestOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tanggalMulai?: SortOrder
    tanggalSelesai?: SortOrder
    alasan?: SortOrder
    status?: SortOrder
    approvedAt?: SortOrderInput | SortOrder
    approvedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    jenisCuti?: JenisCutiOrderByWithRelationInput
  }

  export type CutiRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CutiRequestWhereInput | CutiRequestWhereInput[]
    OR?: CutiRequestWhereInput[]
    NOT?: CutiRequestWhereInput | CutiRequestWhereInput[]
    userId?: IntFilter<"CutiRequest"> | number
    jenisCutiId?: IntFilter<"CutiRequest"> | number
    tanggalMulai?: DateTimeFilter<"CutiRequest"> | Date | string
    tanggalSelesai?: DateTimeFilter<"CutiRequest"> | Date | string
    alasan?: StringFilter<"CutiRequest"> | string
    status?: EnumStatusCutiFilter<"CutiRequest"> | $Enums.StatusCuti
    approvedAt?: DateTimeNullableFilter<"CutiRequest"> | Date | string | null
    approvedBy?: IntNullableFilter<"CutiRequest"> | number | null
    createdAt?: DateTimeFilter<"CutiRequest"> | Date | string
    updatedAt?: DateTimeFilter<"CutiRequest"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    jenisCuti?: XOR<JenisCutiRelationFilter, JenisCutiWhereInput>
  }, "id">

  export type CutiRequestOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tanggalMulai?: SortOrder
    tanggalSelesai?: SortOrder
    alasan?: SortOrder
    status?: SortOrder
    approvedAt?: SortOrderInput | SortOrder
    approvedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CutiRequestCountOrderByAggregateInput
    _avg?: CutiRequestAvgOrderByAggregateInput
    _max?: CutiRequestMaxOrderByAggregateInput
    _min?: CutiRequestMinOrderByAggregateInput
    _sum?: CutiRequestSumOrderByAggregateInput
  }

  export type CutiRequestScalarWhereWithAggregatesInput = {
    AND?: CutiRequestScalarWhereWithAggregatesInput | CutiRequestScalarWhereWithAggregatesInput[]
    OR?: CutiRequestScalarWhereWithAggregatesInput[]
    NOT?: CutiRequestScalarWhereWithAggregatesInput | CutiRequestScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"CutiRequest"> | number
    userId?: IntWithAggregatesFilter<"CutiRequest"> | number
    jenisCutiId?: IntWithAggregatesFilter<"CutiRequest"> | number
    tanggalMulai?: DateTimeWithAggregatesFilter<"CutiRequest"> | Date | string
    tanggalSelesai?: DateTimeWithAggregatesFilter<"CutiRequest"> | Date | string
    alasan?: StringWithAggregatesFilter<"CutiRequest"> | string
    status?: EnumStatusCutiWithAggregatesFilter<"CutiRequest"> | $Enums.StatusCuti
    approvedAt?: DateTimeNullableWithAggregatesFilter<"CutiRequest"> | Date | string | null
    approvedBy?: IntNullableWithAggregatesFilter<"CutiRequest"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"CutiRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CutiRequest"> | Date | string
  }

  export type UserCreateInput = {
    email: string
    password: string
    nama: string
    nip?: string | null
    jabatan?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    kuotaCuti?: KuotaCutiCreateNestedManyWithoutUserInput
    cutiRequest?: CutiRequestCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    email: string
    password: string
    nama: string
    nip?: string | null
    jabatan?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    kuotaCuti?: KuotaCutiUncheckedCreateNestedManyWithoutUserInput
    cutiRequest?: CutiRequestUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nip?: NullableStringFieldUpdateOperationsInput | string | null
    jabatan?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    kuotaCuti?: KuotaCutiUpdateManyWithoutUserNestedInput
    cutiRequest?: CutiRequestUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nip?: NullableStringFieldUpdateOperationsInput | string | null
    jabatan?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    kuotaCuti?: KuotaCutiUncheckedUpdateManyWithoutUserNestedInput
    cutiRequest?: CutiRequestUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    email: string
    password: string
    nama: string
    nip?: string | null
    jabatan?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nip?: NullableStringFieldUpdateOperationsInput | string | null
    jabatan?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nip?: NullableStringFieldUpdateOperationsInput | string | null
    jabatan?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JenisCutiCreateInput = {
    nama: string
    deskripsi?: string | null
    maxHari?: number
    kuotaCuti?: KuotaCutiCreateNestedManyWithoutJenisCutiInput
    cutiRequest?: CutiRequestCreateNestedManyWithoutJenisCutiInput
  }

  export type JenisCutiUncheckedCreateInput = {
    id?: number
    nama: string
    deskripsi?: string | null
    maxHari?: number
    kuotaCuti?: KuotaCutiUncheckedCreateNestedManyWithoutJenisCutiInput
    cutiRequest?: CutiRequestUncheckedCreateNestedManyWithoutJenisCutiInput
  }

  export type JenisCutiUpdateInput = {
    nama?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    maxHari?: IntFieldUpdateOperationsInput | number
    kuotaCuti?: KuotaCutiUpdateManyWithoutJenisCutiNestedInput
    cutiRequest?: CutiRequestUpdateManyWithoutJenisCutiNestedInput
  }

  export type JenisCutiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    maxHari?: IntFieldUpdateOperationsInput | number
    kuotaCuti?: KuotaCutiUncheckedUpdateManyWithoutJenisCutiNestedInput
    cutiRequest?: CutiRequestUncheckedUpdateManyWithoutJenisCutiNestedInput
  }

  export type JenisCutiCreateManyInput = {
    id?: number
    nama: string
    deskripsi?: string | null
    maxHari?: number
  }

  export type JenisCutiUpdateManyMutationInput = {
    nama?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    maxHari?: IntFieldUpdateOperationsInput | number
  }

  export type JenisCutiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    maxHari?: IntFieldUpdateOperationsInput | number
  }

  export type KuotaCutiCreateInput = {
    tahun: number
    totalKuota: number
    sisaKuota: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutKuotaCutiInput
    jenisCuti: JenisCutiCreateNestedOneWithoutKuotaCutiInput
  }

  export type KuotaCutiUncheckedCreateInput = {
    id?: number
    userId: number
    jenisCutiId: number
    tahun: number
    totalKuota: number
    sisaKuota: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type KuotaCutiUpdateInput = {
    tahun?: IntFieldUpdateOperationsInput | number
    totalKuota?: IntFieldUpdateOperationsInput | number
    sisaKuota?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutKuotaCutiNestedInput
    jenisCuti?: JenisCutiUpdateOneRequiredWithoutKuotaCutiNestedInput
  }

  export type KuotaCutiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    jenisCutiId?: IntFieldUpdateOperationsInput | number
    tahun?: IntFieldUpdateOperationsInput | number
    totalKuota?: IntFieldUpdateOperationsInput | number
    sisaKuota?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KuotaCutiCreateManyInput = {
    id?: number
    userId: number
    jenisCutiId: number
    tahun: number
    totalKuota: number
    sisaKuota: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type KuotaCutiUpdateManyMutationInput = {
    tahun?: IntFieldUpdateOperationsInput | number
    totalKuota?: IntFieldUpdateOperationsInput | number
    sisaKuota?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KuotaCutiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    jenisCutiId?: IntFieldUpdateOperationsInput | number
    tahun?: IntFieldUpdateOperationsInput | number
    totalKuota?: IntFieldUpdateOperationsInput | number
    sisaKuota?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CutiRequestCreateInput = {
    tanggalMulai: Date | string
    tanggalSelesai: Date | string
    alasan: string
    status?: $Enums.StatusCuti
    approvedAt?: Date | string | null
    approvedBy?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCutiRequestInput
    jenisCuti: JenisCutiCreateNestedOneWithoutCutiRequestInput
  }

  export type CutiRequestUncheckedCreateInput = {
    id?: number
    userId: number
    jenisCutiId: number
    tanggalMulai: Date | string
    tanggalSelesai: Date | string
    alasan: string
    status?: $Enums.StatusCuti
    approvedAt?: Date | string | null
    approvedBy?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CutiRequestUpdateInput = {
    tanggalMulai?: DateTimeFieldUpdateOperationsInput | Date | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    alasan?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusCutiFieldUpdateOperationsInput | $Enums.StatusCuti
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCutiRequestNestedInput
    jenisCuti?: JenisCutiUpdateOneRequiredWithoutCutiRequestNestedInput
  }

  export type CutiRequestUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    jenisCutiId?: IntFieldUpdateOperationsInput | number
    tanggalMulai?: DateTimeFieldUpdateOperationsInput | Date | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    alasan?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusCutiFieldUpdateOperationsInput | $Enums.StatusCuti
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CutiRequestCreateManyInput = {
    id?: number
    userId: number
    jenisCutiId: number
    tanggalMulai: Date | string
    tanggalSelesai: Date | string
    alasan: string
    status?: $Enums.StatusCuti
    approvedAt?: Date | string | null
    approvedBy?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CutiRequestUpdateManyMutationInput = {
    tanggalMulai?: DateTimeFieldUpdateOperationsInput | Date | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    alasan?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusCutiFieldUpdateOperationsInput | $Enums.StatusCuti
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CutiRequestUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    jenisCutiId?: IntFieldUpdateOperationsInput | number
    tanggalMulai?: DateTimeFieldUpdateOperationsInput | Date | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    alasan?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusCutiFieldUpdateOperationsInput | $Enums.StatusCuti
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type KuotaCutiListRelationFilter = {
    every?: KuotaCutiWhereInput
    some?: KuotaCutiWhereInput
    none?: KuotaCutiWhereInput
  }

  export type CutiRequestListRelationFilter = {
    every?: CutiRequestWhereInput
    some?: CutiRequestWhereInput
    none?: CutiRequestWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type KuotaCutiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CutiRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    nama?: SortOrder
    nip?: SortOrder
    jabatan?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    nama?: SortOrder
    nip?: SortOrder
    jabatan?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    nama?: SortOrder
    nip?: SortOrder
    jabatan?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type JenisCutiCountOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    deskripsi?: SortOrder
    maxHari?: SortOrder
  }

  export type JenisCutiAvgOrderByAggregateInput = {
    id?: SortOrder
    maxHari?: SortOrder
  }

  export type JenisCutiMaxOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    deskripsi?: SortOrder
    maxHari?: SortOrder
  }

  export type JenisCutiMinOrderByAggregateInput = {
    id?: SortOrder
    nama?: SortOrder
    deskripsi?: SortOrder
    maxHari?: SortOrder
  }

  export type JenisCutiSumOrderByAggregateInput = {
    id?: SortOrder
    maxHari?: SortOrder
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type JenisCutiRelationFilter = {
    is?: JenisCutiWhereInput
    isNot?: JenisCutiWhereInput
  }

  export type KuotaCutiUserIdJenisCutiIdTahunCompoundUniqueInput = {
    userId: number
    jenisCutiId: number
    tahun: number
  }

  export type KuotaCutiCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tahun?: SortOrder
    totalKuota?: SortOrder
    sisaKuota?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type KuotaCutiAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tahun?: SortOrder
    totalKuota?: SortOrder
    sisaKuota?: SortOrder
  }

  export type KuotaCutiMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tahun?: SortOrder
    totalKuota?: SortOrder
    sisaKuota?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type KuotaCutiMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tahun?: SortOrder
    totalKuota?: SortOrder
    sisaKuota?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type KuotaCutiSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tahun?: SortOrder
    totalKuota?: SortOrder
    sisaKuota?: SortOrder
  }

  export type EnumStatusCutiFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusCuti | EnumStatusCutiFieldRefInput<$PrismaModel>
    in?: $Enums.StatusCuti[] | ListEnumStatusCutiFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusCuti[] | ListEnumStatusCutiFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusCutiFilter<$PrismaModel> | $Enums.StatusCuti
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type CutiRequestCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tanggalMulai?: SortOrder
    tanggalSelesai?: SortOrder
    alasan?: SortOrder
    status?: SortOrder
    approvedAt?: SortOrder
    approvedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CutiRequestAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    approvedBy?: SortOrder
  }

  export type CutiRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tanggalMulai?: SortOrder
    tanggalSelesai?: SortOrder
    alasan?: SortOrder
    status?: SortOrder
    approvedAt?: SortOrder
    approvedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CutiRequestMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    tanggalMulai?: SortOrder
    tanggalSelesai?: SortOrder
    alasan?: SortOrder
    status?: SortOrder
    approvedAt?: SortOrder
    approvedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CutiRequestSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    jenisCutiId?: SortOrder
    approvedBy?: SortOrder
  }

  export type EnumStatusCutiWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusCuti | EnumStatusCutiFieldRefInput<$PrismaModel>
    in?: $Enums.StatusCuti[] | ListEnumStatusCutiFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusCuti[] | ListEnumStatusCutiFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusCutiWithAggregatesFilter<$PrismaModel> | $Enums.StatusCuti
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusCutiFilter<$PrismaModel>
    _max?: NestedEnumStatusCutiFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type KuotaCutiCreateNestedManyWithoutUserInput = {
    create?: XOR<KuotaCutiCreateWithoutUserInput, KuotaCutiUncheckedCreateWithoutUserInput> | KuotaCutiCreateWithoutUserInput[] | KuotaCutiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: KuotaCutiCreateOrConnectWithoutUserInput | KuotaCutiCreateOrConnectWithoutUserInput[]
    createMany?: KuotaCutiCreateManyUserInputEnvelope
    connect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
  }

  export type CutiRequestCreateNestedManyWithoutUserInput = {
    create?: XOR<CutiRequestCreateWithoutUserInput, CutiRequestUncheckedCreateWithoutUserInput> | CutiRequestCreateWithoutUserInput[] | CutiRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CutiRequestCreateOrConnectWithoutUserInput | CutiRequestCreateOrConnectWithoutUserInput[]
    createMany?: CutiRequestCreateManyUserInputEnvelope
    connect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
  }

  export type KuotaCutiUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<KuotaCutiCreateWithoutUserInput, KuotaCutiUncheckedCreateWithoutUserInput> | KuotaCutiCreateWithoutUserInput[] | KuotaCutiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: KuotaCutiCreateOrConnectWithoutUserInput | KuotaCutiCreateOrConnectWithoutUserInput[]
    createMany?: KuotaCutiCreateManyUserInputEnvelope
    connect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
  }

  export type CutiRequestUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CutiRequestCreateWithoutUserInput, CutiRequestUncheckedCreateWithoutUserInput> | CutiRequestCreateWithoutUserInput[] | CutiRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CutiRequestCreateOrConnectWithoutUserInput | CutiRequestCreateOrConnectWithoutUserInput[]
    createMany?: CutiRequestCreateManyUserInputEnvelope
    connect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumRoleFieldUpdateOperationsInput = {
    set?: $Enums.Role
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type KuotaCutiUpdateManyWithoutUserNestedInput = {
    create?: XOR<KuotaCutiCreateWithoutUserInput, KuotaCutiUncheckedCreateWithoutUserInput> | KuotaCutiCreateWithoutUserInput[] | KuotaCutiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: KuotaCutiCreateOrConnectWithoutUserInput | KuotaCutiCreateOrConnectWithoutUserInput[]
    upsert?: KuotaCutiUpsertWithWhereUniqueWithoutUserInput | KuotaCutiUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: KuotaCutiCreateManyUserInputEnvelope
    set?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    disconnect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    delete?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    connect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    update?: KuotaCutiUpdateWithWhereUniqueWithoutUserInput | KuotaCutiUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: KuotaCutiUpdateManyWithWhereWithoutUserInput | KuotaCutiUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: KuotaCutiScalarWhereInput | KuotaCutiScalarWhereInput[]
  }

  export type CutiRequestUpdateManyWithoutUserNestedInput = {
    create?: XOR<CutiRequestCreateWithoutUserInput, CutiRequestUncheckedCreateWithoutUserInput> | CutiRequestCreateWithoutUserInput[] | CutiRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CutiRequestCreateOrConnectWithoutUserInput | CutiRequestCreateOrConnectWithoutUserInput[]
    upsert?: CutiRequestUpsertWithWhereUniqueWithoutUserInput | CutiRequestUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CutiRequestCreateManyUserInputEnvelope
    set?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    disconnect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    delete?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    connect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    update?: CutiRequestUpdateWithWhereUniqueWithoutUserInput | CutiRequestUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CutiRequestUpdateManyWithWhereWithoutUserInput | CutiRequestUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CutiRequestScalarWhereInput | CutiRequestScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type KuotaCutiUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<KuotaCutiCreateWithoutUserInput, KuotaCutiUncheckedCreateWithoutUserInput> | KuotaCutiCreateWithoutUserInput[] | KuotaCutiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: KuotaCutiCreateOrConnectWithoutUserInput | KuotaCutiCreateOrConnectWithoutUserInput[]
    upsert?: KuotaCutiUpsertWithWhereUniqueWithoutUserInput | KuotaCutiUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: KuotaCutiCreateManyUserInputEnvelope
    set?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    disconnect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    delete?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    connect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    update?: KuotaCutiUpdateWithWhereUniqueWithoutUserInput | KuotaCutiUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: KuotaCutiUpdateManyWithWhereWithoutUserInput | KuotaCutiUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: KuotaCutiScalarWhereInput | KuotaCutiScalarWhereInput[]
  }

  export type CutiRequestUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CutiRequestCreateWithoutUserInput, CutiRequestUncheckedCreateWithoutUserInput> | CutiRequestCreateWithoutUserInput[] | CutiRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CutiRequestCreateOrConnectWithoutUserInput | CutiRequestCreateOrConnectWithoutUserInput[]
    upsert?: CutiRequestUpsertWithWhereUniqueWithoutUserInput | CutiRequestUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CutiRequestCreateManyUserInputEnvelope
    set?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    disconnect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    delete?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    connect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    update?: CutiRequestUpdateWithWhereUniqueWithoutUserInput | CutiRequestUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CutiRequestUpdateManyWithWhereWithoutUserInput | CutiRequestUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CutiRequestScalarWhereInput | CutiRequestScalarWhereInput[]
  }

  export type KuotaCutiCreateNestedManyWithoutJenisCutiInput = {
    create?: XOR<KuotaCutiCreateWithoutJenisCutiInput, KuotaCutiUncheckedCreateWithoutJenisCutiInput> | KuotaCutiCreateWithoutJenisCutiInput[] | KuotaCutiUncheckedCreateWithoutJenisCutiInput[]
    connectOrCreate?: KuotaCutiCreateOrConnectWithoutJenisCutiInput | KuotaCutiCreateOrConnectWithoutJenisCutiInput[]
    createMany?: KuotaCutiCreateManyJenisCutiInputEnvelope
    connect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
  }

  export type CutiRequestCreateNestedManyWithoutJenisCutiInput = {
    create?: XOR<CutiRequestCreateWithoutJenisCutiInput, CutiRequestUncheckedCreateWithoutJenisCutiInput> | CutiRequestCreateWithoutJenisCutiInput[] | CutiRequestUncheckedCreateWithoutJenisCutiInput[]
    connectOrCreate?: CutiRequestCreateOrConnectWithoutJenisCutiInput | CutiRequestCreateOrConnectWithoutJenisCutiInput[]
    createMany?: CutiRequestCreateManyJenisCutiInputEnvelope
    connect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
  }

  export type KuotaCutiUncheckedCreateNestedManyWithoutJenisCutiInput = {
    create?: XOR<KuotaCutiCreateWithoutJenisCutiInput, KuotaCutiUncheckedCreateWithoutJenisCutiInput> | KuotaCutiCreateWithoutJenisCutiInput[] | KuotaCutiUncheckedCreateWithoutJenisCutiInput[]
    connectOrCreate?: KuotaCutiCreateOrConnectWithoutJenisCutiInput | KuotaCutiCreateOrConnectWithoutJenisCutiInput[]
    createMany?: KuotaCutiCreateManyJenisCutiInputEnvelope
    connect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
  }

  export type CutiRequestUncheckedCreateNestedManyWithoutJenisCutiInput = {
    create?: XOR<CutiRequestCreateWithoutJenisCutiInput, CutiRequestUncheckedCreateWithoutJenisCutiInput> | CutiRequestCreateWithoutJenisCutiInput[] | CutiRequestUncheckedCreateWithoutJenisCutiInput[]
    connectOrCreate?: CutiRequestCreateOrConnectWithoutJenisCutiInput | CutiRequestCreateOrConnectWithoutJenisCutiInput[]
    createMany?: CutiRequestCreateManyJenisCutiInputEnvelope
    connect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
  }

  export type KuotaCutiUpdateManyWithoutJenisCutiNestedInput = {
    create?: XOR<KuotaCutiCreateWithoutJenisCutiInput, KuotaCutiUncheckedCreateWithoutJenisCutiInput> | KuotaCutiCreateWithoutJenisCutiInput[] | KuotaCutiUncheckedCreateWithoutJenisCutiInput[]
    connectOrCreate?: KuotaCutiCreateOrConnectWithoutJenisCutiInput | KuotaCutiCreateOrConnectWithoutJenisCutiInput[]
    upsert?: KuotaCutiUpsertWithWhereUniqueWithoutJenisCutiInput | KuotaCutiUpsertWithWhereUniqueWithoutJenisCutiInput[]
    createMany?: KuotaCutiCreateManyJenisCutiInputEnvelope
    set?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    disconnect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    delete?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    connect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    update?: KuotaCutiUpdateWithWhereUniqueWithoutJenisCutiInput | KuotaCutiUpdateWithWhereUniqueWithoutJenisCutiInput[]
    updateMany?: KuotaCutiUpdateManyWithWhereWithoutJenisCutiInput | KuotaCutiUpdateManyWithWhereWithoutJenisCutiInput[]
    deleteMany?: KuotaCutiScalarWhereInput | KuotaCutiScalarWhereInput[]
  }

  export type CutiRequestUpdateManyWithoutJenisCutiNestedInput = {
    create?: XOR<CutiRequestCreateWithoutJenisCutiInput, CutiRequestUncheckedCreateWithoutJenisCutiInput> | CutiRequestCreateWithoutJenisCutiInput[] | CutiRequestUncheckedCreateWithoutJenisCutiInput[]
    connectOrCreate?: CutiRequestCreateOrConnectWithoutJenisCutiInput | CutiRequestCreateOrConnectWithoutJenisCutiInput[]
    upsert?: CutiRequestUpsertWithWhereUniqueWithoutJenisCutiInput | CutiRequestUpsertWithWhereUniqueWithoutJenisCutiInput[]
    createMany?: CutiRequestCreateManyJenisCutiInputEnvelope
    set?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    disconnect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    delete?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    connect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    update?: CutiRequestUpdateWithWhereUniqueWithoutJenisCutiInput | CutiRequestUpdateWithWhereUniqueWithoutJenisCutiInput[]
    updateMany?: CutiRequestUpdateManyWithWhereWithoutJenisCutiInput | CutiRequestUpdateManyWithWhereWithoutJenisCutiInput[]
    deleteMany?: CutiRequestScalarWhereInput | CutiRequestScalarWhereInput[]
  }

  export type KuotaCutiUncheckedUpdateManyWithoutJenisCutiNestedInput = {
    create?: XOR<KuotaCutiCreateWithoutJenisCutiInput, KuotaCutiUncheckedCreateWithoutJenisCutiInput> | KuotaCutiCreateWithoutJenisCutiInput[] | KuotaCutiUncheckedCreateWithoutJenisCutiInput[]
    connectOrCreate?: KuotaCutiCreateOrConnectWithoutJenisCutiInput | KuotaCutiCreateOrConnectWithoutJenisCutiInput[]
    upsert?: KuotaCutiUpsertWithWhereUniqueWithoutJenisCutiInput | KuotaCutiUpsertWithWhereUniqueWithoutJenisCutiInput[]
    createMany?: KuotaCutiCreateManyJenisCutiInputEnvelope
    set?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    disconnect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    delete?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    connect?: KuotaCutiWhereUniqueInput | KuotaCutiWhereUniqueInput[]
    update?: KuotaCutiUpdateWithWhereUniqueWithoutJenisCutiInput | KuotaCutiUpdateWithWhereUniqueWithoutJenisCutiInput[]
    updateMany?: KuotaCutiUpdateManyWithWhereWithoutJenisCutiInput | KuotaCutiUpdateManyWithWhereWithoutJenisCutiInput[]
    deleteMany?: KuotaCutiScalarWhereInput | KuotaCutiScalarWhereInput[]
  }

  export type CutiRequestUncheckedUpdateManyWithoutJenisCutiNestedInput = {
    create?: XOR<CutiRequestCreateWithoutJenisCutiInput, CutiRequestUncheckedCreateWithoutJenisCutiInput> | CutiRequestCreateWithoutJenisCutiInput[] | CutiRequestUncheckedCreateWithoutJenisCutiInput[]
    connectOrCreate?: CutiRequestCreateOrConnectWithoutJenisCutiInput | CutiRequestCreateOrConnectWithoutJenisCutiInput[]
    upsert?: CutiRequestUpsertWithWhereUniqueWithoutJenisCutiInput | CutiRequestUpsertWithWhereUniqueWithoutJenisCutiInput[]
    createMany?: CutiRequestCreateManyJenisCutiInputEnvelope
    set?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    disconnect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    delete?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    connect?: CutiRequestWhereUniqueInput | CutiRequestWhereUniqueInput[]
    update?: CutiRequestUpdateWithWhereUniqueWithoutJenisCutiInput | CutiRequestUpdateWithWhereUniqueWithoutJenisCutiInput[]
    updateMany?: CutiRequestUpdateManyWithWhereWithoutJenisCutiInput | CutiRequestUpdateManyWithWhereWithoutJenisCutiInput[]
    deleteMany?: CutiRequestScalarWhereInput | CutiRequestScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutKuotaCutiInput = {
    create?: XOR<UserCreateWithoutKuotaCutiInput, UserUncheckedCreateWithoutKuotaCutiInput>
    connectOrCreate?: UserCreateOrConnectWithoutKuotaCutiInput
    connect?: UserWhereUniqueInput
  }

  export type JenisCutiCreateNestedOneWithoutKuotaCutiInput = {
    create?: XOR<JenisCutiCreateWithoutKuotaCutiInput, JenisCutiUncheckedCreateWithoutKuotaCutiInput>
    connectOrCreate?: JenisCutiCreateOrConnectWithoutKuotaCutiInput
    connect?: JenisCutiWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutKuotaCutiNestedInput = {
    create?: XOR<UserCreateWithoutKuotaCutiInput, UserUncheckedCreateWithoutKuotaCutiInput>
    connectOrCreate?: UserCreateOrConnectWithoutKuotaCutiInput
    upsert?: UserUpsertWithoutKuotaCutiInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutKuotaCutiInput, UserUpdateWithoutKuotaCutiInput>, UserUncheckedUpdateWithoutKuotaCutiInput>
  }

  export type JenisCutiUpdateOneRequiredWithoutKuotaCutiNestedInput = {
    create?: XOR<JenisCutiCreateWithoutKuotaCutiInput, JenisCutiUncheckedCreateWithoutKuotaCutiInput>
    connectOrCreate?: JenisCutiCreateOrConnectWithoutKuotaCutiInput
    upsert?: JenisCutiUpsertWithoutKuotaCutiInput
    connect?: JenisCutiWhereUniqueInput
    update?: XOR<XOR<JenisCutiUpdateToOneWithWhereWithoutKuotaCutiInput, JenisCutiUpdateWithoutKuotaCutiInput>, JenisCutiUncheckedUpdateWithoutKuotaCutiInput>
  }

  export type UserCreateNestedOneWithoutCutiRequestInput = {
    create?: XOR<UserCreateWithoutCutiRequestInput, UserUncheckedCreateWithoutCutiRequestInput>
    connectOrCreate?: UserCreateOrConnectWithoutCutiRequestInput
    connect?: UserWhereUniqueInput
  }

  export type JenisCutiCreateNestedOneWithoutCutiRequestInput = {
    create?: XOR<JenisCutiCreateWithoutCutiRequestInput, JenisCutiUncheckedCreateWithoutCutiRequestInput>
    connectOrCreate?: JenisCutiCreateOrConnectWithoutCutiRequestInput
    connect?: JenisCutiWhereUniqueInput
  }

  export type EnumStatusCutiFieldUpdateOperationsInput = {
    set?: $Enums.StatusCuti
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type UserUpdateOneRequiredWithoutCutiRequestNestedInput = {
    create?: XOR<UserCreateWithoutCutiRequestInput, UserUncheckedCreateWithoutCutiRequestInput>
    connectOrCreate?: UserCreateOrConnectWithoutCutiRequestInput
    upsert?: UserUpsertWithoutCutiRequestInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutCutiRequestInput, UserUpdateWithoutCutiRequestInput>, UserUncheckedUpdateWithoutCutiRequestInput>
  }

  export type JenisCutiUpdateOneRequiredWithoutCutiRequestNestedInput = {
    create?: XOR<JenisCutiCreateWithoutCutiRequestInput, JenisCutiUncheckedCreateWithoutCutiRequestInput>
    connectOrCreate?: JenisCutiCreateOrConnectWithoutCutiRequestInput
    upsert?: JenisCutiUpsertWithoutCutiRequestInput
    connect?: JenisCutiWhereUniqueInput
    update?: XOR<XOR<JenisCutiUpdateToOneWithWhereWithoutCutiRequestInput, JenisCutiUpdateWithoutCutiRequestInput>, JenisCutiUncheckedUpdateWithoutCutiRequestInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleFilter<$PrismaModel> | $Enums.Role
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Role | EnumRoleFieldRefInput<$PrismaModel>
    in?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Role[] | ListEnumRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumRoleWithAggregatesFilter<$PrismaModel> | $Enums.Role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumRoleFilter<$PrismaModel>
    _max?: NestedEnumRoleFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumStatusCutiFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusCuti | EnumStatusCutiFieldRefInput<$PrismaModel>
    in?: $Enums.StatusCuti[] | ListEnumStatusCutiFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusCuti[] | ListEnumStatusCutiFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusCutiFilter<$PrismaModel> | $Enums.StatusCuti
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumStatusCutiWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StatusCuti | EnumStatusCutiFieldRefInput<$PrismaModel>
    in?: $Enums.StatusCuti[] | ListEnumStatusCutiFieldRefInput<$PrismaModel>
    notIn?: $Enums.StatusCuti[] | ListEnumStatusCutiFieldRefInput<$PrismaModel>
    not?: NestedEnumStatusCutiWithAggregatesFilter<$PrismaModel> | $Enums.StatusCuti
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStatusCutiFilter<$PrismaModel>
    _max?: NestedEnumStatusCutiFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type KuotaCutiCreateWithoutUserInput = {
    tahun: number
    totalKuota: number
    sisaKuota: number
    createdAt?: Date | string
    updatedAt?: Date | string
    jenisCuti: JenisCutiCreateNestedOneWithoutKuotaCutiInput
  }

  export type KuotaCutiUncheckedCreateWithoutUserInput = {
    id?: number
    jenisCutiId: number
    tahun: number
    totalKuota: number
    sisaKuota: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type KuotaCutiCreateOrConnectWithoutUserInput = {
    where: KuotaCutiWhereUniqueInput
    create: XOR<KuotaCutiCreateWithoutUserInput, KuotaCutiUncheckedCreateWithoutUserInput>
  }

  export type KuotaCutiCreateManyUserInputEnvelope = {
    data: KuotaCutiCreateManyUserInput | KuotaCutiCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type CutiRequestCreateWithoutUserInput = {
    tanggalMulai: Date | string
    tanggalSelesai: Date | string
    alasan: string
    status?: $Enums.StatusCuti
    approvedAt?: Date | string | null
    approvedBy?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    jenisCuti: JenisCutiCreateNestedOneWithoutCutiRequestInput
  }

  export type CutiRequestUncheckedCreateWithoutUserInput = {
    id?: number
    jenisCutiId: number
    tanggalMulai: Date | string
    tanggalSelesai: Date | string
    alasan: string
    status?: $Enums.StatusCuti
    approvedAt?: Date | string | null
    approvedBy?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CutiRequestCreateOrConnectWithoutUserInput = {
    where: CutiRequestWhereUniqueInput
    create: XOR<CutiRequestCreateWithoutUserInput, CutiRequestUncheckedCreateWithoutUserInput>
  }

  export type CutiRequestCreateManyUserInputEnvelope = {
    data: CutiRequestCreateManyUserInput | CutiRequestCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type KuotaCutiUpsertWithWhereUniqueWithoutUserInput = {
    where: KuotaCutiWhereUniqueInput
    update: XOR<KuotaCutiUpdateWithoutUserInput, KuotaCutiUncheckedUpdateWithoutUserInput>
    create: XOR<KuotaCutiCreateWithoutUserInput, KuotaCutiUncheckedCreateWithoutUserInput>
  }

  export type KuotaCutiUpdateWithWhereUniqueWithoutUserInput = {
    where: KuotaCutiWhereUniqueInput
    data: XOR<KuotaCutiUpdateWithoutUserInput, KuotaCutiUncheckedUpdateWithoutUserInput>
  }

  export type KuotaCutiUpdateManyWithWhereWithoutUserInput = {
    where: KuotaCutiScalarWhereInput
    data: XOR<KuotaCutiUpdateManyMutationInput, KuotaCutiUncheckedUpdateManyWithoutUserInput>
  }

  export type KuotaCutiScalarWhereInput = {
    AND?: KuotaCutiScalarWhereInput | KuotaCutiScalarWhereInput[]
    OR?: KuotaCutiScalarWhereInput[]
    NOT?: KuotaCutiScalarWhereInput | KuotaCutiScalarWhereInput[]
    id?: IntFilter<"KuotaCuti"> | number
    userId?: IntFilter<"KuotaCuti"> | number
    jenisCutiId?: IntFilter<"KuotaCuti"> | number
    tahun?: IntFilter<"KuotaCuti"> | number
    totalKuota?: IntFilter<"KuotaCuti"> | number
    sisaKuota?: IntFilter<"KuotaCuti"> | number
    createdAt?: DateTimeFilter<"KuotaCuti"> | Date | string
    updatedAt?: DateTimeFilter<"KuotaCuti"> | Date | string
  }

  export type CutiRequestUpsertWithWhereUniqueWithoutUserInput = {
    where: CutiRequestWhereUniqueInput
    update: XOR<CutiRequestUpdateWithoutUserInput, CutiRequestUncheckedUpdateWithoutUserInput>
    create: XOR<CutiRequestCreateWithoutUserInput, CutiRequestUncheckedCreateWithoutUserInput>
  }

  export type CutiRequestUpdateWithWhereUniqueWithoutUserInput = {
    where: CutiRequestWhereUniqueInput
    data: XOR<CutiRequestUpdateWithoutUserInput, CutiRequestUncheckedUpdateWithoutUserInput>
  }

  export type CutiRequestUpdateManyWithWhereWithoutUserInput = {
    where: CutiRequestScalarWhereInput
    data: XOR<CutiRequestUpdateManyMutationInput, CutiRequestUncheckedUpdateManyWithoutUserInput>
  }

  export type CutiRequestScalarWhereInput = {
    AND?: CutiRequestScalarWhereInput | CutiRequestScalarWhereInput[]
    OR?: CutiRequestScalarWhereInput[]
    NOT?: CutiRequestScalarWhereInput | CutiRequestScalarWhereInput[]
    id?: IntFilter<"CutiRequest"> | number
    userId?: IntFilter<"CutiRequest"> | number
    jenisCutiId?: IntFilter<"CutiRequest"> | number
    tanggalMulai?: DateTimeFilter<"CutiRequest"> | Date | string
    tanggalSelesai?: DateTimeFilter<"CutiRequest"> | Date | string
    alasan?: StringFilter<"CutiRequest"> | string
    status?: EnumStatusCutiFilter<"CutiRequest"> | $Enums.StatusCuti
    approvedAt?: DateTimeNullableFilter<"CutiRequest"> | Date | string | null
    approvedBy?: IntNullableFilter<"CutiRequest"> | number | null
    createdAt?: DateTimeFilter<"CutiRequest"> | Date | string
    updatedAt?: DateTimeFilter<"CutiRequest"> | Date | string
  }

  export type KuotaCutiCreateWithoutJenisCutiInput = {
    tahun: number
    totalKuota: number
    sisaKuota: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutKuotaCutiInput
  }

  export type KuotaCutiUncheckedCreateWithoutJenisCutiInput = {
    id?: number
    userId: number
    tahun: number
    totalKuota: number
    sisaKuota: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type KuotaCutiCreateOrConnectWithoutJenisCutiInput = {
    where: KuotaCutiWhereUniqueInput
    create: XOR<KuotaCutiCreateWithoutJenisCutiInput, KuotaCutiUncheckedCreateWithoutJenisCutiInput>
  }

  export type KuotaCutiCreateManyJenisCutiInputEnvelope = {
    data: KuotaCutiCreateManyJenisCutiInput | KuotaCutiCreateManyJenisCutiInput[]
    skipDuplicates?: boolean
  }

  export type CutiRequestCreateWithoutJenisCutiInput = {
    tanggalMulai: Date | string
    tanggalSelesai: Date | string
    alasan: string
    status?: $Enums.StatusCuti
    approvedAt?: Date | string | null
    approvedBy?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutCutiRequestInput
  }

  export type CutiRequestUncheckedCreateWithoutJenisCutiInput = {
    id?: number
    userId: number
    tanggalMulai: Date | string
    tanggalSelesai: Date | string
    alasan: string
    status?: $Enums.StatusCuti
    approvedAt?: Date | string | null
    approvedBy?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CutiRequestCreateOrConnectWithoutJenisCutiInput = {
    where: CutiRequestWhereUniqueInput
    create: XOR<CutiRequestCreateWithoutJenisCutiInput, CutiRequestUncheckedCreateWithoutJenisCutiInput>
  }

  export type CutiRequestCreateManyJenisCutiInputEnvelope = {
    data: CutiRequestCreateManyJenisCutiInput | CutiRequestCreateManyJenisCutiInput[]
    skipDuplicates?: boolean
  }

  export type KuotaCutiUpsertWithWhereUniqueWithoutJenisCutiInput = {
    where: KuotaCutiWhereUniqueInput
    update: XOR<KuotaCutiUpdateWithoutJenisCutiInput, KuotaCutiUncheckedUpdateWithoutJenisCutiInput>
    create: XOR<KuotaCutiCreateWithoutJenisCutiInput, KuotaCutiUncheckedCreateWithoutJenisCutiInput>
  }

  export type KuotaCutiUpdateWithWhereUniqueWithoutJenisCutiInput = {
    where: KuotaCutiWhereUniqueInput
    data: XOR<KuotaCutiUpdateWithoutJenisCutiInput, KuotaCutiUncheckedUpdateWithoutJenisCutiInput>
  }

  export type KuotaCutiUpdateManyWithWhereWithoutJenisCutiInput = {
    where: KuotaCutiScalarWhereInput
    data: XOR<KuotaCutiUpdateManyMutationInput, KuotaCutiUncheckedUpdateManyWithoutJenisCutiInput>
  }

  export type CutiRequestUpsertWithWhereUniqueWithoutJenisCutiInput = {
    where: CutiRequestWhereUniqueInput
    update: XOR<CutiRequestUpdateWithoutJenisCutiInput, CutiRequestUncheckedUpdateWithoutJenisCutiInput>
    create: XOR<CutiRequestCreateWithoutJenisCutiInput, CutiRequestUncheckedCreateWithoutJenisCutiInput>
  }

  export type CutiRequestUpdateWithWhereUniqueWithoutJenisCutiInput = {
    where: CutiRequestWhereUniqueInput
    data: XOR<CutiRequestUpdateWithoutJenisCutiInput, CutiRequestUncheckedUpdateWithoutJenisCutiInput>
  }

  export type CutiRequestUpdateManyWithWhereWithoutJenisCutiInput = {
    where: CutiRequestScalarWhereInput
    data: XOR<CutiRequestUpdateManyMutationInput, CutiRequestUncheckedUpdateManyWithoutJenisCutiInput>
  }

  export type UserCreateWithoutKuotaCutiInput = {
    email: string
    password: string
    nama: string
    nip?: string | null
    jabatan?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    cutiRequest?: CutiRequestCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutKuotaCutiInput = {
    id?: number
    email: string
    password: string
    nama: string
    nip?: string | null
    jabatan?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    cutiRequest?: CutiRequestUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutKuotaCutiInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutKuotaCutiInput, UserUncheckedCreateWithoutKuotaCutiInput>
  }

  export type JenisCutiCreateWithoutKuotaCutiInput = {
    nama: string
    deskripsi?: string | null
    maxHari?: number
    cutiRequest?: CutiRequestCreateNestedManyWithoutJenisCutiInput
  }

  export type JenisCutiUncheckedCreateWithoutKuotaCutiInput = {
    id?: number
    nama: string
    deskripsi?: string | null
    maxHari?: number
    cutiRequest?: CutiRequestUncheckedCreateNestedManyWithoutJenisCutiInput
  }

  export type JenisCutiCreateOrConnectWithoutKuotaCutiInput = {
    where: JenisCutiWhereUniqueInput
    create: XOR<JenisCutiCreateWithoutKuotaCutiInput, JenisCutiUncheckedCreateWithoutKuotaCutiInput>
  }

  export type UserUpsertWithoutKuotaCutiInput = {
    update: XOR<UserUpdateWithoutKuotaCutiInput, UserUncheckedUpdateWithoutKuotaCutiInput>
    create: XOR<UserCreateWithoutKuotaCutiInput, UserUncheckedCreateWithoutKuotaCutiInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutKuotaCutiInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutKuotaCutiInput, UserUncheckedUpdateWithoutKuotaCutiInput>
  }

  export type UserUpdateWithoutKuotaCutiInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nip?: NullableStringFieldUpdateOperationsInput | string | null
    jabatan?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cutiRequest?: CutiRequestUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutKuotaCutiInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nip?: NullableStringFieldUpdateOperationsInput | string | null
    jabatan?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cutiRequest?: CutiRequestUncheckedUpdateManyWithoutUserNestedInput
  }

  export type JenisCutiUpsertWithoutKuotaCutiInput = {
    update: XOR<JenisCutiUpdateWithoutKuotaCutiInput, JenisCutiUncheckedUpdateWithoutKuotaCutiInput>
    create: XOR<JenisCutiCreateWithoutKuotaCutiInput, JenisCutiUncheckedCreateWithoutKuotaCutiInput>
    where?: JenisCutiWhereInput
  }

  export type JenisCutiUpdateToOneWithWhereWithoutKuotaCutiInput = {
    where?: JenisCutiWhereInput
    data: XOR<JenisCutiUpdateWithoutKuotaCutiInput, JenisCutiUncheckedUpdateWithoutKuotaCutiInput>
  }

  export type JenisCutiUpdateWithoutKuotaCutiInput = {
    nama?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    maxHari?: IntFieldUpdateOperationsInput | number
    cutiRequest?: CutiRequestUpdateManyWithoutJenisCutiNestedInput
  }

  export type JenisCutiUncheckedUpdateWithoutKuotaCutiInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    maxHari?: IntFieldUpdateOperationsInput | number
    cutiRequest?: CutiRequestUncheckedUpdateManyWithoutJenisCutiNestedInput
  }

  export type UserCreateWithoutCutiRequestInput = {
    email: string
    password: string
    nama: string
    nip?: string | null
    jabatan?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    kuotaCuti?: KuotaCutiCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutCutiRequestInput = {
    id?: number
    email: string
    password: string
    nama: string
    nip?: string | null
    jabatan?: string | null
    role?: $Enums.Role
    createdAt?: Date | string
    updatedAt?: Date | string
    kuotaCuti?: KuotaCutiUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCutiRequestInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCutiRequestInput, UserUncheckedCreateWithoutCutiRequestInput>
  }

  export type JenisCutiCreateWithoutCutiRequestInput = {
    nama: string
    deskripsi?: string | null
    maxHari?: number
    kuotaCuti?: KuotaCutiCreateNestedManyWithoutJenisCutiInput
  }

  export type JenisCutiUncheckedCreateWithoutCutiRequestInput = {
    id?: number
    nama: string
    deskripsi?: string | null
    maxHari?: number
    kuotaCuti?: KuotaCutiUncheckedCreateNestedManyWithoutJenisCutiInput
  }

  export type JenisCutiCreateOrConnectWithoutCutiRequestInput = {
    where: JenisCutiWhereUniqueInput
    create: XOR<JenisCutiCreateWithoutCutiRequestInput, JenisCutiUncheckedCreateWithoutCutiRequestInput>
  }

  export type UserUpsertWithoutCutiRequestInput = {
    update: XOR<UserUpdateWithoutCutiRequestInput, UserUncheckedUpdateWithoutCutiRequestInput>
    create: XOR<UserCreateWithoutCutiRequestInput, UserUncheckedCreateWithoutCutiRequestInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutCutiRequestInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutCutiRequestInput, UserUncheckedUpdateWithoutCutiRequestInput>
  }

  export type UserUpdateWithoutCutiRequestInput = {
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nip?: NullableStringFieldUpdateOperationsInput | string | null
    jabatan?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    kuotaCuti?: KuotaCutiUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutCutiRequestInput = {
    id?: IntFieldUpdateOperationsInput | number
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nip?: NullableStringFieldUpdateOperationsInput | string | null
    jabatan?: NullableStringFieldUpdateOperationsInput | string | null
    role?: EnumRoleFieldUpdateOperationsInput | $Enums.Role
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    kuotaCuti?: KuotaCutiUncheckedUpdateManyWithoutUserNestedInput
  }

  export type JenisCutiUpsertWithoutCutiRequestInput = {
    update: XOR<JenisCutiUpdateWithoutCutiRequestInput, JenisCutiUncheckedUpdateWithoutCutiRequestInput>
    create: XOR<JenisCutiCreateWithoutCutiRequestInput, JenisCutiUncheckedCreateWithoutCutiRequestInput>
    where?: JenisCutiWhereInput
  }

  export type JenisCutiUpdateToOneWithWhereWithoutCutiRequestInput = {
    where?: JenisCutiWhereInput
    data: XOR<JenisCutiUpdateWithoutCutiRequestInput, JenisCutiUncheckedUpdateWithoutCutiRequestInput>
  }

  export type JenisCutiUpdateWithoutCutiRequestInput = {
    nama?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    maxHari?: IntFieldUpdateOperationsInput | number
    kuotaCuti?: KuotaCutiUpdateManyWithoutJenisCutiNestedInput
  }

  export type JenisCutiUncheckedUpdateWithoutCutiRequestInput = {
    id?: IntFieldUpdateOperationsInput | number
    nama?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    maxHari?: IntFieldUpdateOperationsInput | number
    kuotaCuti?: KuotaCutiUncheckedUpdateManyWithoutJenisCutiNestedInput
  }

  export type KuotaCutiCreateManyUserInput = {
    id?: number
    jenisCutiId: number
    tahun: number
    totalKuota: number
    sisaKuota: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CutiRequestCreateManyUserInput = {
    id?: number
    jenisCutiId: number
    tanggalMulai: Date | string
    tanggalSelesai: Date | string
    alasan: string
    status?: $Enums.StatusCuti
    approvedAt?: Date | string | null
    approvedBy?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type KuotaCutiUpdateWithoutUserInput = {
    tahun?: IntFieldUpdateOperationsInput | number
    totalKuota?: IntFieldUpdateOperationsInput | number
    sisaKuota?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jenisCuti?: JenisCutiUpdateOneRequiredWithoutKuotaCutiNestedInput
  }

  export type KuotaCutiUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    jenisCutiId?: IntFieldUpdateOperationsInput | number
    tahun?: IntFieldUpdateOperationsInput | number
    totalKuota?: IntFieldUpdateOperationsInput | number
    sisaKuota?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KuotaCutiUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    jenisCutiId?: IntFieldUpdateOperationsInput | number
    tahun?: IntFieldUpdateOperationsInput | number
    totalKuota?: IntFieldUpdateOperationsInput | number
    sisaKuota?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CutiRequestUpdateWithoutUserInput = {
    tanggalMulai?: DateTimeFieldUpdateOperationsInput | Date | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    alasan?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusCutiFieldUpdateOperationsInput | $Enums.StatusCuti
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    jenisCuti?: JenisCutiUpdateOneRequiredWithoutCutiRequestNestedInput
  }

  export type CutiRequestUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    jenisCutiId?: IntFieldUpdateOperationsInput | number
    tanggalMulai?: DateTimeFieldUpdateOperationsInput | Date | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    alasan?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusCutiFieldUpdateOperationsInput | $Enums.StatusCuti
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CutiRequestUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    jenisCutiId?: IntFieldUpdateOperationsInput | number
    tanggalMulai?: DateTimeFieldUpdateOperationsInput | Date | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    alasan?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusCutiFieldUpdateOperationsInput | $Enums.StatusCuti
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KuotaCutiCreateManyJenisCutiInput = {
    id?: number
    userId: number
    tahun: number
    totalKuota: number
    sisaKuota: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CutiRequestCreateManyJenisCutiInput = {
    id?: number
    userId: number
    tanggalMulai: Date | string
    tanggalSelesai: Date | string
    alasan: string
    status?: $Enums.StatusCuti
    approvedAt?: Date | string | null
    approvedBy?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type KuotaCutiUpdateWithoutJenisCutiInput = {
    tahun?: IntFieldUpdateOperationsInput | number
    totalKuota?: IntFieldUpdateOperationsInput | number
    sisaKuota?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutKuotaCutiNestedInput
  }

  export type KuotaCutiUncheckedUpdateWithoutJenisCutiInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    tahun?: IntFieldUpdateOperationsInput | number
    totalKuota?: IntFieldUpdateOperationsInput | number
    sisaKuota?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type KuotaCutiUncheckedUpdateManyWithoutJenisCutiInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    tahun?: IntFieldUpdateOperationsInput | number
    totalKuota?: IntFieldUpdateOperationsInput | number
    sisaKuota?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CutiRequestUpdateWithoutJenisCutiInput = {
    tanggalMulai?: DateTimeFieldUpdateOperationsInput | Date | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    alasan?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusCutiFieldUpdateOperationsInput | $Enums.StatusCuti
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutCutiRequestNestedInput
  }

  export type CutiRequestUncheckedUpdateWithoutJenisCutiInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    tanggalMulai?: DateTimeFieldUpdateOperationsInput | Date | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    alasan?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusCutiFieldUpdateOperationsInput | $Enums.StatusCuti
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CutiRequestUncheckedUpdateManyWithoutJenisCutiInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    tanggalMulai?: DateTimeFieldUpdateOperationsInput | Date | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    alasan?: StringFieldUpdateOperationsInput | string
    status?: EnumStatusCutiFieldUpdateOperationsInput | $Enums.StatusCuti
    approvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approvedBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JenisCutiCountOutputTypeDefaultArgs instead
     */
    export type JenisCutiCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JenisCutiCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use JenisCutiDefaultArgs instead
     */
    export type JenisCutiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = JenisCutiDefaultArgs<ExtArgs>
    /**
     * @deprecated Use KuotaCutiDefaultArgs instead
     */
    export type KuotaCutiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = KuotaCutiDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CutiRequestDefaultArgs instead
     */
    export type CutiRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CutiRequestDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}